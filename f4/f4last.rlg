Reduce (CSL, rev 6363), 23-Aug-2022 ...






*** End-of-file read 



errormessage

(AM: Input: ((plus x y)) (x y) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 1 0 1] [nil 0 1 1]]] [nil [
nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil] [nil nil nil] 2 0 0 [nil 0 0] [nil nil nil] [nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 20 23 20] 2 3 revgradlex [nil 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil] 2 0 1 [nil 0 0
] [nil nil nil] [nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
2 0 0 3 0 0 0] [nil nil [nil 40 4294967295 0 1] [nil 43 4294967295 0 1] nil nil
nil nil nil] [nil 20 23 20] 2 3 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(initialize_structures: divmasks)
[nil nil [nil 40 4294967285 0 1] [nil 43 4294967280 0 1] nil nil nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] nil]
[nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil]
1
(sort_gens_by_lead_increasing: before (([nil 1 0 1] [nil 2 3] [nil (1 . 1) (1 .
1)])))
(sort_gens_by_lead_increasing: after (([nil 1 0 1] [nil 2 3] [nil (1 . 1) (1 . 1
)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil] 2 0 1 [nil 0 0] [nil
nil nil] [nil nil nil] 0]
(initialize_structures: after normalize)
[nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil] 2 0 1 [nil 0 0] [nil
nil nil] [nil nil nil] 0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil] 2 0 1 [nil 0 0
] [nil nil nil] [nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
2 0 0 3 0 0 0] [nil nil [nil 40 4294967285 0 1] [nil 43 4294967280 0 1] nil nil
nil nil nil] [nil 20 23 20] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 20 23 20] 2 3 revgradlex [nil 1
2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8
1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Basis:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil] 2 1 1 [nil 0 0
] [nil 1 nil] [nil 4294967285 nil] 1])
(HT:  [nil [nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
2 0 0 3 0 0 0] [nil nil [nil 40 4294967285 0 1] [nil 43 4294967280 0 1] nil nil
nil nil nil] [nil 20 23 20] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(plcm: [nil 0 nil])
(f4: after main loop:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)] nil]
2 1 1 [nil 0 0] [nil 1 nil] [nil 4294967285 nil] 1])
(f4: after filter redundant:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (1 . 1)
] nil] 2 1 1 [nil 0 0] [nil 1 nil] [nil 4294967285 nil] 1])
(In standardize, just before sort [nil [nil [nil 2 3]] [nil [nil (1 . 1) (1 . 1)
]] 1 1 1 [nil 0] [nil 1] [nil 4294967285] 1])
(f4: after standardize:  [nil [nil [nil 2 3]] [nil [nil (1 . 1) (1 . 1)]] 1 1 1
[nil 0] [nil 1] [nil 4294967285] 1])
(After f4:  [nil [nil [nil 2 3]] [nil [nil (1 . 1) (1 . 1)]] 1 1 1 [nil 0] [nil
1] [nil 4294967285] 1])
(exps :  [nil [nil [nil 1 0 1] [nil 0 1 1]]])
(AM: groebner: [nil [nil [nil 1 0 1] [nil 0 1 1]]] [nil [nil (1 . 1) (1 . 1)]])
convert_to_output..
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))

{x + y}


***** 
usage: f4(polynomials: List, vars: List, order: Any). For example,

          > f4({x*y + 1, y*z + 1}, {x, y, z}, lex); 

(AM: Input: ((plus x y) x) (x y) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))
(poly 2)
(((1 1 0)) ((1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [
nil 1 0 1]]] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 2] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1
. 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil] 0
])
(HT:  [nil [nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
0 0 2 3 0 0 0] [nil nil [nil 10 4294967295 0 1] [nil 18 4294967295 0 1] nil nil
nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(initialize_structures: divmasks)
[nil nil [nil 10 4294967285 0 1] [nil 18 4294967280 0 1] nil nil nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 2] nil nil]
[nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 1 0 1] [nil 2 3] [nil (1 . 1) (1 .
1)]) ([nil 1 0 1] [nil 2] [nil (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 1 0 1] [nil 2 3] [nil (1 . 1) (1 . 1
)]) ([nil 1 0 1] [nil 2] [nil (1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 2 3] [nil 2] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1)]
nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil] 0]
(initialize_structures: after normalize)
[nil [nil [nil 2 3] [nil 2] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1)]
nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil] 0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 2 3] [nil 2] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1
. 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil] 0
])
(HT:  [nil [nil [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 0 1] [nil 18 4294967280 0 1] nil nil
nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1
2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 1 [nil [nil 2 1 2 1] [nil 1 2 0 1] nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 2 1 2 1] [nil 1 2 0 1] nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 2 3] [nil 2] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1
. 1)] nil nil] 4 2 2 [nil 1 0 0 0] [nil 2 nil nil nil] [nil 4294967285 nil nil
nil] 1])
(HT:  [nil [nil [nil 1 0 1] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0
0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 0 1] [nil 18 4294967280 0 1] nil nil
nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(plcm: [nil 0 nil nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 2 1 2 1] [nil 1 2 0 1] nil nil nil nil nil nil]
, npairs: 1)
(sort_pairset_by_lcm: before (([nil 2 1 2 1] [nil 1 0 1])))
(sort_pairset_by_lcm: after (([nil 2 1 2 1] [nil 1 0 1])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (2 1) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  10)
(htmp =  0 ; h =  10)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  18)
(htmp =  0 ; h =  18)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 1] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10
4294967285 2 1] [nil 18 4294967280 0 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 2] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 1] [nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2
3 0 0 0] [nil nil [nil 10 4294967285 2 1] [nil 18 4294967280 0 1] nil nil nil
nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  10)
(htmp =  0 ; h =  10)
(f4: after select:  [nil [nil [nil 2 1 2 1] [nil 1 2 0 1] nil nil nil nil nil
nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2]] [nil] [nil] 2 0 2 1 1 1 0 0
[nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 1 0 1] [nil 1 0 1] [nil 0 1 1] nil nil nil nil
nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 2 1] [nil 18 4294967280 0
1] nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10
4294967285 0 1] [nil 18 4294967280 0 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 0 1] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10
4294967285 2 1] [nil 18 4294967280 0 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 0 1] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10
4294967285 2 1] [nil 18 4294967280 1 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2]] [nil] [nil] 2 0
2 2 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 0 1] [nil 1 0 1] [nil 0 1 1]
nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 2 1] [nil
18 4294967280 1 1] nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2]] [nil] [nil
] 2 0 2 2 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1] [nil 1 0 1] [nil 0 1
1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 2 1] [
nil 18 4294967280 1 1] nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3
2])
(convert_hashes_to_columns: sorted by hash [nil 2 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1]] [nil 2 3] [nil] 2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil
2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil
10 4294967285 1 1] [nil 18 4294967280 2 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1]] [nil 2 3] [nil]
2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1]] [nil
2 3] [nil [nil (1 . 1)]] 2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [
nil 2 1]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2]])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2]] [nil 2 3]
[nil [nil (1 . 1)]] 1 1 1 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 1
]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 3]] [nil 2 3] [nil
[nil (1 . 1)]] 1 1 1 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 1]])
(f4: after reduction, basis:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil
(1 . 1) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 2 3 [nil 1 0 0 0] [nil 2 nil
nil nil] [nil 4294967285 nil nil nil] 1])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 0 2] [nil 2 3 3 2] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 2 3 3 2] [nil 2 3 3 2] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil (1 . 1) (
1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3 nil nil] [
nil 4294967285 4294967280 nil nil] 2])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil (1 . 1
) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3 nil nil
] [nil 4294967285 4294967280 nil nil] 2])
(f4: after filter redundant:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil
(1 . 1) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3
nil nil] [nil 4294967285 4294967280 nil nil] 2])
(In standardize, just before sort [nil [nil [nil 2] [nil 3]] [nil [nil (1 . 1)]
[nil (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280] 2])
(f4: after standardize:  [nil [nil [nil 3] [nil 2]] [nil [nil (1 . 1)] [nil (1 .
1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967280 4294967285] 2])
(After f4:  [nil [nil [nil 3] [nil 2]] [nil [nil (1 . 1)] [nil (1 . 1)]] 2 2 2 [
nil 0 0] [nil 1 2] [nil 4294967280 4294967285] 2])
(exps :  [nil [nil [nil 0 1 1]] [nil [nil 1 0 1]]])
(AM: groebner: [nil [nil [nil 0 1 1]] [nil [nil 1 0 1]]] [nil [nil (1 . 1)] [nil
(1 . 1)]])
convert_to_output..
(poly 1)
(((1 0 1)) ((1 . 1)))

+++ backtrace requested
Inside: assert_error
Arg1: poly_replus
Arg2: (list)
Arg3: list
Arg4: 0
Arg5: ((y))
Arg6: y
Inside: assert_check1
Arg1: poly_replus
Arg2: noassert!:poly_replus
Arg3: ((y))
Arg4: (list)
Arg5: list
Inside: assert!:poly_replus
Arg1: (y)
Inside: assert_check1
Arg1: poly_poly2lp
Arg2: noassert!:poly_poly2lp
Arg3: ((p ((1 0 1)) ((1 . 1)) 0))
Arg4: (polynomial)
Arg5: list
Ins 0 0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 2 1] [nil
18 4294967280 1 1] nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2 1 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2]] [nil] [nil
] 2 0 2 2 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1] [nil 1 0 1] [nil 0 1
1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil 10 4294967285 2 1] [
nil 18 4294967280 1 1] nil nil nil nil nil] [nil 7 15 3] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3
2])
(convert_hashes_to_columns: sorted by hash [nil 2 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1]] [nil 2 3] [nil] 2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil
2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 2 3 0 0 0] [nil nil [nil
10 4294967285 1 1] [nil 18 4294967280 2 1] nil nil nil nil nil] [nil 7 15 3] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1]] [nil 2 3] [nil]
2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1]] [nil
2 3] [nil [nil (1 . 1)]] 2 0 2 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [
nil 2 1]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2]])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2]] [nil 2 3]
[nil [nil (1 . 1)]] 1 1 1 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 1
]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 3]] [nil 2 3] [nil
[nil (1 . 1)]] 1 1 1 2 1 1 1 1 [nil 1 nil nil nil nil nil nil nil] [nil 2 1]])
(f4: after reduction, basis:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil
(1 . 1) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 2 3 [nil 1 0 0 0] [nil 2 nil
nil nil] [nil 4294967285 nil nil nil] 1])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 0 2] [nil 2 3 3 2] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 2 3 3 2] [nil 2 3 3 2] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil (1 . 1) (
1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3 nil nil] [
nil 4294967285 4294967280 nil nil] 2])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil (1 . 1
) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3 nil nil
] [nil 4294967285 4294967280 nil nil] 2])
(f4: after filter redundant:  [nil [nil [nil 2 3] [nil 2] [nil 3] nil] [nil [nil
(1 . 1) (1 . 1)] [nil (1 . 1)] [nil (1 . 1)] nil] 4 3 3 [nil 1 0 0 0] [nil 2 3
nil nil] [nil 4294967285 4294967280 nil nil] 2])
(In standardize, just before sort [nil [nil [nil 2] [nil 3]] [nil [nil (1 . 1)]
[nil (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280] 2])
(f4: after standardize:  [nil [nil [nil 3] [nil 2]] [nil [nil (1 . 1)] [nil (1 .
1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967280 4294967285] 2])
(After f4:  [nil [nil [nil 3] [nil 2]] [nil [nil (1 . 1)] [nil (1 . 1)]] 2 2 2 [
nil 0 0] [nil 1 2] [nil 4294967280 4294967285] 2])
(exps :  [nil [nil [nil 0 1 1]] [nil [nil 1 0 1]]])
(AM: groebner: [nil [nil [nil 0 1 1]] [nil [nil 1 0 1]]] [nil [nil (1 . 1)] [nil
(1 . 1)]])
convert_to_output..
(poly 1)
(((1 0 1)) ((1 . 1)))


poly_replus being entered:
   a1:   (y)
returned:   y

***** assertion `poly_replus(list): list' is violated by result

(AM: Input: ((plus (times x y) 1) (plus (times y z) 1)) (x y z) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 3 4 revgradlex])
(poly 1)
(((2 1 1 0) (0 0 0 0)) ((1 . 1) (1 . 1)))
(poly 2)
(((2 0 1 1) (0 0 0 0)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 3 4 revgradlex] [nil [nil [nil 1 1 0 2] [nil 0 0 0 0]] [nil
[nil 0 1 1 2] [nil 0 0 0 0]]] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] nil nil
nil nil] [nil 0 3 4 0 0 2 0 0] [nil nil [nil 92 1073741823 0 2] [nil 0
1073741823 0 0] [nil 97 1073741823 0 2] nil nil nil nil] [nil 24 30 29 19] 3 4
revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 4 2])
(initialize_structures: divmasks)
[nil nil [nil 92 1073741385 0 2] [nil 0 1073741312 0 0] [nil 97 1073741312 0 2]
nil nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 3] nil nil]
[nil [nil 0 0 0 0] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] nil nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 1 1 0 2] [nil 2 3] [nil (1 . 1) (1
. 1)]) ([nil 0 1 1 2] [nil 4 3] [nil (1 . 1) (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 0 1 1 2] [nil 4 3] [nil (1 . 1) (1 .
1)]) ([nil 1 1 0 2] [nil 2 3] [nil (1 . 1) (1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
(initialize_structures: after normalize)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
f4: Input
(Ring:  [nil 3 4 revgradlex])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] nil nil
nil nil] [nil 0 3 4 0 0 2 0 0] [nil nil [nil 92 1073741385 0 2] [nil 0
1073741312 0 0] [nil 97 1073741312 0 2] nil nil nil nil] [nil 24 30 29 19] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 4 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0
0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [
nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3
10 8 1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 3] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 5 3] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 1073741312
1073741385 nil nil] 2])
(HT:  [nil [nil [nil 1 1 1 3] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] [nil 1 1
1 3] nil nil nil] [nil 0 3 4 0 0 2 5 0] [nil nil [nil 92 1073741385 0 2] [nil 0
1073741312 0 0] [nil 97 1073741312 0 2] [nil 140 1073741385 0 3] nil nil nil] [
nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 5 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 5 3] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 5 3] [nil 1 1 1 3])))
(sort_pairset_by_lcm: after (([nil 1 2 5 3] [nil 1 1 1 3])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 24 30 29 19]
3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 1 0 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  43)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2
3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  97)
(htmp =  43 ; h =  140)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  43 ; h =  43)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 0 1] [nil 1 1 1 3
] [nil 1 0 0 1] nil nil nil nil nil] [nil 0 0 0 0 3 2 0 0] [nil nil [nil 140
1073741385 2 3] [nil 43 1073741385 0 1] nil nil nil nil nil] [nil 24 30 29 19] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 3 2])
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  48)
[nil [nil [nil 1 0 0 1] [nil 1 1 1 3] [nil 1 0 0 1] nil nil nil nil nil] [nil 0
0 0 0 3 2 0 0] [nil nil [nil 140 1073741385 2 3] [nil 43 1073741385 0 1] nil nil
nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 3 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  92)
(htmp =  48 ; h =  140)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  48 ; h =  48)
(f4: after select:  [nil [nil [nil 1 2 5 3] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 0 0 1 1] [nil 1 1 1 3] [nil 1 0 0 1] [nil 0 0 1 1
] nil nil nil nil] [nil 0 4 0 0 3 2 0 0] [nil nil [nil 140 1073741385 2 3] [nil
43 1073741385 0 1] [nil 48 1073741312 0 1] nil nil nil nil] [nil 24 30 29 19] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 1 1] [nil 1 1 0 2
] [nil 0 0 0 0] [nil 0 1 1 2] [nil 1 1 1 3] nil nil nil] [nil 0 3 4 0 0 2 5 0] [
nil nil [nil 92 1073741385 0 2] [nil 0 1073741312 0 0] [nil 97 1073741312 0 2] [
nil 140 1073741385 0 3] nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3
1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 0 1 1] [nil 1 1 1 3]
[nil 1 0 0 1] [nil 0 0 1 1] nil nil nil nil] [nil 0 4 0 0 3 2 0 0] [nil nil [nil
140 1073741385 2 3] [nil 43 1073741385 0 1] [nil 48 1073741312 0 1] nil nil nil
nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 0 1 1] [nil 1 1 1 3]
[nil 1 0 0 1] [nil 0 0 1 1] nil nil nil nil] [nil 0 4 0 0 3 2 0 0] [nil nil [nil
140 1073741385 2 3] [nil 43 1073741385 1 1] [nil 48 1073741312 1 1] nil nil nil
nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 0 1 1] [nil 1 1 1 3] [nil 1 0 0
1] [nil 0 0 1 1] nil nil nil nil] [nil 0 4 0 0 3 2 0 0] [nil nil [nil 140
1073741385 2 3] [nil 43 1073741385 1 1] [nil 48 1073741312 1 1] nil nil nil nil]
[nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 0 1 1] [nil 1 1 1 3] [nil
1 0 0 1] [nil 0 0 1 1] nil nil nil nil] [nil 0 4 0 0 3 2 0 0] [nil nil [nil 140
1073741385 2 3] [nil 43 1073741385 1 1] [nil 48 1073741312 1 1] nil nil nil nil]
[nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 0 1 1] [
nil 1 1 1 3] [nil 1 0 0 1] [nil 0 0 1 1] nil nil nil nil] [nil 0 4 0 0 3 2 0 0]
[nil nil [nil 140 1073741385 1 3] [nil 43 1073741385 2 1] [nil 48 1073741312 3 1
] nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 6 7]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 2 3 [
nil 0 0 0 0] [nil 1 2 nil nil] [nil 1073741312 1073741385 nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 2 3] [nil 2 3 3 2] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
I am here!!!
(f4: after update:  [nil [nil [nil 2 3 2 2] [nil 1 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 0 1 0 0
] [nil 1 3 nil nil] [nil 1073741312 1073741385 nil nil] 2])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 2 3 2 2] [nil 1 3 2 3] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 2 3 2 2] [nil 1 1 0 2])))
(sort_pairset_by_lcm: after (([nil 2 3 2 2] [nil 1 1 0 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 24 30 29 19]
3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (2 3) 2)
(sort_generators_by_position: after sort:  (2 3) 2)
(f4_select_normal: after sorting S-polys [nil 2 3] 2)
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2
3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  92)
(htmp =  0 ; h =  92)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 2 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 0 0 0] [nil 1 1 0 2
] [nil 0 0 0 0] nil nil nil nil nil] [nil 0 3 0 0 0 2 0 0] [nil nil [nil 92
1073741385 2 2] [nil 0 1073741312 0 0] nil nil nil nil nil] [nil 24 30 29 19] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 3 2])
(INSERTING [nil 6 7] MULTIPLIED BY [nil 0 1 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  49)
[nil [nil [nil 0 0 0 0] [nil 1 1 0 2] [nil 0 0 0 0] nil nil nil nil nil] [nil 0
3 0 0 0 2 0 0] [nil nil [nil 92 1073741385 2 2] [nil 0 1073741312 0 0] nil nil
nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 3 2]
(MONOMIAL [nil 1 0 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  43)
(htmp =  49 ; h =  92)
(MONOMIAL [nil 0 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  48)
(htmp =  49 ; h =  97)
(f4: after select:  [nil [nil [nil 2 3 2 2] [nil 1 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 2 nil] [nil 3 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2
] nil nil nil nil] [nil 0 3 4 0 0 2 0 0] [nil nil [nil 92 1073741385 2 2] [nil 0
1073741312 0 0] [nil 97 1073741312 0 2] nil nil nil nil] [nil 24 30 29 19] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 1 0 1] [nil 1 1 0 2
] [nil 0 0 0 0] [nil 0 1 1 2] [nil 1 1 1 3] [nil 1 0 0 1] [nil 0 0 1 1] [nil 1 1
0 2] nil nil nil nil nil nil nil nil] [nil 0 3 4 7 0 0 0 0 0 0 0 0 6 2 5 0] [nil
nil [nil 92 1073741385 0 2] [nil 0 1073741312 0 0] [nil 97 1073741312 0 2] [nil
140 1073741385 0 3] [nil 43 1073741385 2 1] [nil 48 1073741312 3 1] nil nil nil
nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 1 2] [nil 1 1 0 2]
[nil 0 0 0 0] [nil 0 1 1 2] nil nil nil nil] [nil 0 3 4 0 0 2 0 0] [nil nil [nil
92 1073741385 2 2] [nil 0 1073741312 0 0] [nil 97 1073741312 0 2] nil nil nil
nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 4 3] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 3 4 0 0 0 0 0 0 0 0 0 0 2 0 0] [nil
nil [nil 92 1073741385 2 2] [nil 0 1073741312 1 0] [nil 97 1073741312 1 2] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [
nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3
10 16 4 2]
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  97)
(htmp =  0 ; h =  97)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 0 0 0] [nil 1 1 0 2]
[nil 0 0 0 0] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 0 3 4 0 0 0 0 0 0 0 0 0 0 2 0 0] [nil nil [nil 92 1073741385 2 2] [nil 0
1073741312 1 0] [nil 97 1073741312 2 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3] [nil 4 3]] [nil [nil 2 4]] [nil
] [nil] 3 0 3 3 2 1 0 0 [nil 2 1 nil nil nil nil nil nil] [nil 3 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 0 0 0] [nil 1 1 0 2] [nil 0 0 0
0] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 3 4 0 0
0 0 0 0 0 0 0 0 2 0 0] [nil nil [nil 92 1073741385 2 2] [nil 0 1073741312 1 0] [
nil 97 1073741312 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 24
30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3] [nil 4 3]] [nil [nil 2 4]
] [nil] [nil] 3 0 3 3 2 1 0 0 [nil 2 1 nil nil nil nil nil nil] [nil 3 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 0 0 0] [nil 1 1 0 2] [nil
0 0 0 0] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 3
4 0 0 0 0 0 0 0 0 0 0 2 0 0] [nil nil [nil 92 1073741385 2 2] [nil 0 1073741312
1 0] [nil 97 1073741312 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 4 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3] [nil 2 3
]] [nil [nil 1 2]] [nil 2 4 3] [nil] 3 0 3 3 2 1 2 1 [nil 2 1 nil nil nil nil
nil nil] [nil 3 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 0 0 0] [
nil 1 1 0 2] [nil 0 0 0 0] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 0 3 4 0 0 0 0 0 0 0 0 0 0 2 0 0] [nil nil [nil 92 1073741385 1 2]
[nil 0 1073741312 3 0] [nil 97 1073741312 2 2] nil nil nil nil nil nil nil nil
nil nil nil nil] [nil 24 30 29 19] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 3] [nil 2 3]] [nil [nil 1 2]] [nil
2 4 3] [nil] 3 0 3 3 2 1 2 1 [nil 2 1 nil nil nil nil nil nil] [nil 3 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3] [nil 2 3]] [nil [nil
1 2]] [nil 2 4 3] [nil nil] 3 0 3 3 2 1 2 1 [nil 2 1 nil nil nil nil nil nil] [
nil 3 nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3] [nil 2 3]] [nil] [nil 2
4 3] [nil nil] 0 0 0 3 2 1 2 1 [nil 2 1 nil nil nil nil nil nil] [nil 3 nil nil]
])
(f4: after reduction, matrix:  [nil [nil [nil 1 3] [nil 2 3]] [nil] [nil 2 4 3]
[nil nil] 0 0 0 3 2 1 2 1 [nil 2 1 nil nil nil nil nil nil] [nil 3 nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [
nil 0 1 0 0] [nil 1 3 nil nil] [nil 1073741312 1073741385 nil nil] 2])
(f4: after update:  [nil [nil [nil 2 3 2 2] [nil 1 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 0 1 0 0
] [nil 1 3 nil nil] [nil 1073741312 1073741385 nil nil] 2])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil [nil (1
. 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 0 1 0
0] [nil 1 3 nil nil] [nil 1073741312 1073741385 nil nil] 2])
(f4: after filter redundant:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [
nil 0 1 0 0] [nil 1 3 nil nil] [nil 1073741312 1073741385 nil nil] 2])
(In standardize, just before sort [nil [nil [nil 4 3] [nil 6 7]] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (-1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 1073741312
1073741385] 2])
(f4: after standardize:  [nil [nil [nil 6 7] [nil 4 3]] [nil [nil (1 . 1) (-1 .
1)] [nil (1 . 1) (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 1073741385 1073741312]
2])
(After f4:  [nil [nil [nil 6 7] [nil 4 3]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 .
1) (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 1073741385 1073741312] 2])
(exps :  [nil [nil [nil 1 0 0 1] [nil 0 0 1 1]] [nil [nil 0 1 1 2] [nil 0 0 0 0]
]])
(AM: groebner: [nil [nil [nil 1 0 0 1] [nil 0 0 1 1]] [nil [nil 0 1 1 2] [nil 0
0 0 0]]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]])
convert_to_output..
(poly 1)
(((1 1 0 0) (1 0 0 1)) ((1 . 1) (-1 . 1)))
(poly 2)
(((2 0 1 1) (0 0 0 0)) ((1 . 1) (1 . 1)))

{y*z + 1,x - z}

(AM: Input: ((plus (times x y) 1) (plus x y)) (x y) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((2 1 1) (0 0 0)) ((1 . 1) (1 . 1)))
(poly 2)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 1 1 2] [nil 0 0 0]] [nil [
nil 1 0 1] [nil 0 1 1]]] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 22 5] 2 3 revgradlex [nil 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil
nil nil] [nil 0 3 0 4 5 0 2 0] [nil nil [nil 45 4294967295 0 2] [nil 0
4294967295 0 0] [nil 18 4294967295 0 1] [nil 27 4294967295 0 1] nil nil nil] [
nil 13 22 5] 2 3 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(initialize_structures: divmasks)
[nil nil [nil 45 4294967285 0 2] [nil 0 4294967280 0 0] [nil 18 4294967285 0 1]
[nil 27 4294967280 0 1] nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 5] nil nil]
[nil [nil 0 0 0] [nil 1 1 2] [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 1 1 2] [nil 2 3] [nil (1 . 1) (1 .
1)]) ([nil 1 0 1] [nil 4 5] [nil (1 . 1) (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 1 0 1] [nil 4 5] [nil (1 . 1) (1 . 1
)]) ([nil 1 1 2] [nil 2 3] [nil (1 . 1) (1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 4 5] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
(initialize_structures: after normalize)
[nil [nil [nil 4 5] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 4 5] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] nil
nil nil] [nil 0 3 0 4 5 0 2 0] [nil nil [nil 45 4294967285 0 2] [nil 0
4294967280 0 0] [nil 18 4294967285 0 1] [nil 27 4294967280 0 1] nil nil nil] [
nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 22 5] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1
2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 2] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 2 2] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 4 5] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285
4294967285 nil nil] 2])
(HT:  [nil [nil [nil 1 1 2] [nil 1 1 2] [nil 0 0 0] [nil 1 0 1] [nil 0 1 1] [nil
1 1 2] nil nil] [nil 0 3 0 4 5 0 2 0] [nil nil [nil 45 4294967285 0 2] [nil 0
4294967280 0 0] [nil 18 4294967285 0 1] [nil 27 4294967280 0 1] nil nil nil] [
nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 2 2] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 2 2] [nil 1 1 2])))
(sort_pairset_by_lcm: after (([nil 1 2 2 2] [nil 1 1 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 22 5] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 4 5] MULTIPLIED BY [nil 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  27)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  18)
(htmp =  27 ; h =  45)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  27)
(htmp =  27 ; h =  54)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 2 2] [nil 1 1 2] [
nil 0 2 2] nil nil nil nil nil] [nil 0 0 0 0 0 0 2 3] [nil nil [nil 45
4294967285 2 2] [nil 54 4294967280 0 2] nil nil nil nil nil] [nil 13 22 5] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 2 2] [nil 1 1 2] [nil 0 2 2] nil nil nil nil nil] [nil 0 0 0 0
0 0 2 3] [nil nil [nil 45 4294967285 2 2] [nil 54 4294967280 0 2] nil nil nil
nil nil] [nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(MONOMIAL [nil 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4: after select:  [nil [nil [nil 1 2 2 2] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 0 2 2] [nil 0 0 0] nil
nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil nil [nil 45 4294967285 2 2] [nil 54
4294967280 0 2] [nil 0 4294967280 0 0] nil nil nil nil] [nil 13 22 5] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 1 1 2] [
nil 0 0 0] [nil 1 0 1] [nil 0 1 1] [nil 1 1 2] nil nil] [nil 0 3 0 4 5 0 2 0] [
nil nil [nil 45 4294967285 0 2] [nil 0 4294967280 0 0] [nil 18 4294967285 0 1] [
nil 27 4294967280 0 1] nil nil nil] [nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 0 0] [nil 1 1 2] [
nil 0 2 2] [nil 0 0 0] nil nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil nil [nil 45
4294967285 2 2] [nil 54 4294967280 0 2] [nil 0 4294967280 0 0] nil nil nil nil]
[nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 0 0] [nil 1 1 2] [
nil 0 2 2] [nil 0 0 0] nil nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil nil [nil 45
4294967285 2 2] [nil 54 4294967280 1 2] [nil 0 4294967280 1 0] nil nil nil nil]
[nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 0 2 2] [
nil 0 0 0] nil nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil nil [nil 45 4294967285 2
2] [nil 54 4294967280 1 2] [nil 0 4294967280 1 0] nil nil nil nil] [nil 13 22 5]
2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 0 2
2] [nil 0 0 0] nil nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil nil [nil 45
4294967285 2 2] [nil 54 4294967280 1 2] [nil 0 4294967280 1 0] nil nil nil nil]
[nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 0 0] [
nil 1 1 2] [nil 0 2 2] [nil 0 0 0] nil nil nil nil] [nil 0 4 0 0 0 0 2 3] [nil
nil [nil 45 4294967285 1 2] [nil 54 4294967280 2 2] [nil 0 4294967280 3 0] nil
nil nil nil] [nil 13 22 5] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 6 3]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5] [nil 2 3] [nil 6 3] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 2 3 [
nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285 4294967285 nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 3 3] [nil 2 3 3 3] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
I am here!!!
(f4: after update:  [nil [nil [nil 1 3 3 3] [nil 2 3 3 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 4 5] [nil 2 3] [nil 6 3] nil] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 0 0 0 0
] [nil 1 2 3 nil] [nil 4294967285 4294967285 4294967280 nil] 3])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 4 5] [nil 2 3] [nil 6 3] nil] [nil [nil (1
. 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 0 0 0
0] [nil 1 2 3 nil] [nil 4294967285 4294967285 4294967280 nil] 3])
(f4: after filter redundant:  [nil [nil [nil 4 5] [nil 2 3] [nil 6 3] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [
nil 0 0 0 0] [nil 1 2 3 nil] [nil 4294967285 4294967285 4294967280 nil] 3])
(In standardize, just before sort [nil [nil [nil 4 5] [nil 2 3] [nil 6 3]] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)]] 3 3 3 [nil 0
0 0] [nil 1 2 3] [nil 4294967285 4294967285 4294967280] 3])
(f4: after standardize:  [nil [nil [nil 4 5] [nil 6 3] [nil 2 3]] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]] 3 3 3 [nil 0 0 0] [nil
1 2 3] [nil 4294967285 4294967280 4294967285] 3])
(After f4:  [nil [nil [nil 4 5] [nil 6 3] [nil 2 3]] [nil [nil (1 . 1) (1 . 1)]
[nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]] 3 3 3 [nil 0 0 0] [nil 1 2 3] [nil
4294967285 4294967280 4294967285] 3])
(exps :  [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 2 2] [nil 0 0 0]] [nil [
nil 1 1 2] [nil 0 0 0]]])
(AM: groebner: [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 2 2] [nil 0 0 0]]
[nil [nil 1 1 2] [nil 0 0 0]]] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)]
[nil (1 . 1) (1 . 1)]])
convert_to_output..
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))
(poly 2)
(((2 0 2) (0 0 0)) ((1 . 1) (-1 . 1)))
(poly 3)
(((2 1 1) (0 0 0)) ((1 . 1) (1 . 1)))

          2
{x*y + 1,y  - 1,x + y}

(AM: Input: ((plus (times (expt x 2) y) 1) (plus (times x (expt y 2)) 1)) (x y)
revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((3 2 1) (0 0 0)) ((1 . 1) (1 . 1)))
(poly 2)
(((3 1 2) (0 0 0)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 2 1 3] [nil 0 0 0]] [nil [
nil 1 2 3] [nil 0 0 0]]] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 2 1 3] [nil 0 0 0] [nil 1 2 3] nil nil nil nil]
[nil 2 3 4 0 0 0 0 0] [nil nil [nil 111 4294967295 0 3] [nil 0 4294967295 0 0] [
nil 111 4294967295 0 3] nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4
2])
(initialize_structures: divmasks)
[nil nil [nil 111 4294967295 0 3] [nil 0 4294967280 0 0] [nil 111 4294967285 0 3
] nil nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 3] nil nil]
[nil [nil 0 0 0] [nil 2 1 3] [nil 0 0 0] [nil 1 2 3] nil nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 2 1 3] [nil 2 3] [nil (1 . 1) (1 .
1)]) ([nil 1 2 3] [nil 4 3] [nil (1 . 1) (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 1 2 3] [nil 4 3] [nil (1 . 1) (1 . 1
)]) ([nil 2 1 3] [nil 2 3] [nil (1 . 1) (1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
(initialize_structures: after normalize)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil]
0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 2 1 3] [nil 0 0 0] [nil 1 2 3] nil nil nil nil]
[nil 2 3 4 0 0 0 0 0] [nil nil [nil 111 4294967295 0 3] [nil 0 4294967280 0 0] [
nil 111 4294967285 0 3] nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4
2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1
2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8
1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 4] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 5 4] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285
4294967295 nil nil] 2])
(HT:  [nil [nil [nil 2 2 4] [nil 2 1 3] [nil 0 0 0] [nil 1 2 3] [nil 2 2 4] nil
nil nil] [nil 2 3 4 0 0 5 0 0] [nil nil [nil 111 4294967295 0 3] [nil 0
4294967280 0 0] [nil 111 4294967285 0 3] [nil 148 4294967295 0 4] nil nil nil] [
nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 5 4] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 5 4] [nil 2 2 4])))
(sort_pairset_by_lcm: after (([nil 1 2 5 4] [nil 2 2 4])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 1 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  37)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  111)
(htmp =  37 ; h =  148)
(MONOMIAL [nil 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  37 ; h =  37)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 1] [nil 2 2 4] [
nil 1 0 1] nil nil nil nil nil] [nil 0 0 0 0 0 2 3 0] [nil nil [nil 148
4294967295 2 4] [nil 37 4294967285 0 1] nil nil nil nil nil] [nil 22 22 15] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  37)
[nil [nil [nil 1 0 1] [nil 2 2 4] [nil 1 0 1] nil nil nil nil nil] [nil 0 0 0 0
0 2 3 0] [nil nil [nil 148 4294967295 2 4] [nil 37 4294967285 0 1] nil nil nil
nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 2 1 3] WITH HASH h = htmp + hash(e))
(hash(e) =  111)
(htmp =  37 ; h =  148)
(MONOMIAL [nil 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  37 ; h =  37)
(f4: after select:  [nil [nil [nil 1 2 5 4] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 1] [nil 2 2 4] [nil 1 0 1] [nil 0 1 1] nil
nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [nil 148 4294967295 2 4] [nil 37
4294967285 0 1] [nil 37 4294967280 0 1] nil nil nil nil] [nil 22 22 15] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 1 1] [nil 2 1 3] [
nil 0 0 0] [nil 1 2 3] [nil 2 2 4] nil nil nil] [nil 2 3 4 0 0 5 0 0] [nil nil [
nil 111 4294967295 0 3] [nil 0 4294967280 0 0] [nil 111 4294967285 0 3] [nil 148
4294967295 0 4] nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 1] [nil 2 2 4] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [nil 148
4294967295 2 4] [nil 37 4294967285 0 1] [nil 37 4294967280 0 1] nil nil nil nil]
[nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 1 1] [nil 2 2 4] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [nil 148
4294967295 2 4] [nil 37 4294967285 1 1] [nil 37 4294967280 1 1] nil nil nil nil]
[nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 1 1] [nil 2 2 4] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [nil 148 4294967295 2
4] [nil 37 4294967285 1 1] [nil 37 4294967280 1 1] nil nil nil nil] [nil 22 22
15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 1 1] [nil 2 2 4] [nil 1 0
1] [nil 0 1 1] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [nil 148
4294967295 2 4] [nil 37 4294967285 1 1] [nil 37 4294967280 1 1] nil nil nil nil]
[nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 1 1] [
nil 2 2 4] [nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil
nil [nil 148 4294967295 1 4] [nil 37 4294967285 2 1] [nil 37 4294967280 3 1] nil
nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 6 7]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil
[nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 2 3 [
nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285 4294967295 nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 3 3] [nil 2 3 4 3] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
I am here!!!
(f4: after update:  [nil [nil [nil 1 3 4 3] [nil 2 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 2])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] nil] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 1 1 0 0
] [nil 3 2 nil nil] [nil 4294967285 4294967295 nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 2)
(f4_select_normal: Selected 2 pairs)
(sort_pairset_by_lcm: [nil [nil 1 3 4 3] [nil 2 3 2 3] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil] , npairs: 2)
(sort_pairset_by_lcm: before (([nil 1 3 4 3] [nil 1 2 3]) ([nil 2 3 2 3] [nil 2
1 3])))
(sort_pairset_by_lcm: after (([nil 1 3 4 3] [nil 1 2 3]) ([nil 2 3 2 3] [nil 2 1
3])))
(f4_select_normal: matrix [nil [nil nil nil nil nil] [nil nil nil nil nil] [nil]
[nil] 4 0 0 0 0 0 0 0 [nil nil nil nil nil] [nil nil nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  2 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 3) 2)
(sort_generators_by_position: after sort:  (1 3) 2)
(f4_select_normal: after sorting S-polys [nil 1 3 nil nil] 2)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  111)
(htmp =  0 ; h =  111)
(MONOMIAL [nil 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil nil nil] [nil
nil nil nil nil] [nil] [nil] 4 0 1 1 1 0 0 0 [nil 1 nil nil nil] [nil nil nil
nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 0 0] [nil 1 2 3] [
nil 0 0 0] nil nil nil nil nil] [nil 2 3 0 0 0 0 0 0] [nil nil [nil 111
4294967285 2 3] [nil 0 4294967280 0 0] nil nil nil nil nil] [nil 22 22 15] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 6 7] MULTIPLIED BY [nil 0 2 2] TO SYM HASHTABLE:)
(hash(etmp) =  74)
[nil [nil [nil 0 0 0] [nil 1 2 3] [nil 0 0 0] nil nil nil nil nil] [nil 2 3 0 0
0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0 4294967280 0 0] nil nil nil
nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  74 ; h =  111)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  74 ; h =  111)
(f4_select_normal: adding  2 times 2 S-polys)
(sort_generators_by_position: before sort:  (2 3) 2)
(sort_generators_by_position: after sort:  (2 3) 2)
(f4_select_normal: after sorting S-polys [nil 2 3 nil nil] 2)
I am here!!!
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 3 3] [nil 1 2 3] [nil 0 0 0] [nil 0 3 3] nil nil nil nil nil
nil nil nil nil nil nil nil] [nil 2 3 4 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil
111 4294967285 2 3] [nil 0 4294967280 0 0] [nil 111 4294967280 0 3] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 4 2]
(MONOMIAL [nil 2 1 3] WITH HASH h = htmp + hash(e))
(hash(e) =  111)
(htmp =  0 ; h =  111)
(MONOMIAL [nil 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] [nil 5 3] nil nil]
[nil [nil 2 4] nil nil nil] [nil] [nil] 4 0 3 2 2 1 0 0 [nil 1 2 nil nil] [nil 3
nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 0 0] [nil 1 2 3] [
nil 0 0 0] [nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil nil nil nil]
[nil 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0
4294967280 0 0] [nil 111 4294967280 0 3] [nil 111 4294967295 2 3] nil nil nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(INSERTING [nil 6 7] MULTIPLIED BY [nil 1 1 2] TO SYM HASHTABLE:)
(hash(etmp) =  74)
[nil [nil [nil 0 0 0] [nil 1 2 3] [nil 0 0 0] [nil 0 3 3] [nil 2 1 3] nil nil
nil nil nil nil nil nil nil nil nil] [nil 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil
nil [nil 111 4294967285 2 3] [nil 0 4294967280 0 0] [nil 111 4294967280 0 3] [
nil 111 4294967295 2 3] nil nil nil nil nil nil nil nil nil nil nil] [nil 22 22
15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2] 2 16 16 5 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  74 ; h =  111)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  74 ; h =  111)
(f4: after select:  [nil [nil [nil 1 3 4 3] [nil 2 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] [nil 5 3] nil nil] [nil [nil 2 4] [nil 5 2]] [
nil] [nil] 4 0 4 2 2 2 0 0 [nil 1 2 nil nil] [nil 3 3 nil nil]])
(f4: symbol_ht: [nil [nil [nil 1 2 3] [nil 1 2 3] [nil 0 0 0] [nil 0 3 3] [nil 2
1 3] nil nil nil nil nil nil nil nil nil nil nil] [nil 2 3 4 5 0 0 0 0 0 0 0 0 0
0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0 4294967280 0 0] [nil 111
4294967280 0 3] [nil 111 4294967295 2 3] nil nil nil nil nil nil nil nil nil nil
nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 1 1 2] [nil 2 1 3] [
nil 0 0 0] [nil 1 2 3] [nil 2 2 4] [nil 1 0 1] [nil 0 1 1] [nil 2 1 3] nil nil
nil nil nil nil nil nil] [nil 2 3 4 0 0 5 6 7 0 0 0 0 0 0 0 0] [nil nil [nil 111
4294967295 0 3] [nil 0 4294967280 0 0] [nil 111 4294967285 0 3] [nil 148
4294967295 0 4] [nil 37 4294967285 2 1] [nil 37 4294967280 3 1] nil nil nil nil
nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 7 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 2 3] [nil 1 2 3] [
nil 0 0 0] [nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil nil nil nil]
[nil 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0
4294967280 0 0] [nil 111 4294967280 0 3] [nil 111 4294967295 2 3] nil nil nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 2 3] [nil 1 2 3] [
nil 0 0 0] [nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil nil nil nil]
[nil 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0
4294967280 1 0] [nil 111 4294967280 1 3] [nil 111 4294967295 2 3] nil nil nil
nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3] [nil 5 3]] [nil [nil 2 4] [nil
5 2]] [nil] [nil] 4 0 4 4 2 2 0 0 [nil 1 2 nil nil nil nil nil nil] [nil 3 3 nil
nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 2 3] [nil 1 2 3] [nil 0 0 0] [
nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil nil nil nil] [nil 2 3 4 5
0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0 4294967280 1 0
] [nil 111 4294967280 1 3] [nil 111 4294967295 2 3] nil nil nil nil nil nil nil
nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3] [nil 5 3]] [nil [nil 2 4]
[nil 5 2]] [nil] [nil] 4 0 4 4 2 2 0 0 [nil 1 2 nil nil nil nil nil nil] [nil 3
3 nil nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 2 3] [nil 1 2 3] [nil 0 0
0] [nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil nil nil nil] [nil 2 3
4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285 2 3] [nil 0 4294967280
1 0] [nil 111 4294967280 1 3] [nil 111 4294967295 2 3] nil nil nil nil nil nil
nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(convert_hashes_to_columns: sorted by hash [nil 5 2 4 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 2 4] [nil 1 4
]] [nil [nil 2 3] [nil 1 2]] [nil 5 2 4 3] [nil] 4 0 4 4 2 2 2 2 [nil 1 2 nil
nil nil nil nil nil] [nil 3 3 nil nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 2 3] [
nil 1 2 3] [nil 0 0 0] [nil 0 3 3] [nil 2 1 3] nil nil nil nil nil nil nil nil
nil nil nil] [nil 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0] [nil nil [nil 111 4294967285
2 3] [nil 0 4294967280 4 0] [nil 111 4294967280 3 3] [nil 111 4294967295 1 3]
nil nil nil nil nil nil nil nil nil nil nil] [nil 22 22 15] 2 3 revgradlex [nil
1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16
16 5 2])
(f4_reduction: after sorting [nil [nil [nil 1 4] [nil 2 4]] [nil [nil 1 2] [nil
2 3]] [nil 5 2 4 3] [nil] 4 0 4 4 2 2 2 2 [nil 2 1 nil nil nil nil nil nil] [nil
3 3 nil nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 4] [nil 2 4]] [nil [nil
1 2] [nil 2 3]] [nil 5 2 4 3] [nil nil [nil (1 . 1) (1 . 1)]] 4 0 4 4 2 2 2 2 [
nil 2 1 nil nil nil nil nil nil] [nil 3 3 2 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 4] [nil 2 4] [nil 3 4] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 4] [nil 2 4]] [nil [nil 3 4
]] [nil 5 2 4 3] [nil nil [nil (1 . 1) (1 . 1)]] 1 1 1 4 2 2 2 2 [nil 2 1 nil
nil nil nil nil nil] [nil 3 3 2 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 4] [nil 2 4]] [nil [nil 8 3]] [
nil 5 2 4 3] [nil nil [nil (1 . 1) (1 . 1)]] 1 1 1 4 2 2 2 2 [nil 2 1 nil nil
nil nil nil nil] [nil 3 3 2 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] [nil 8 3]
nil nil nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
-1 . 1)] [nil (1 . 1) (1 . 1)] nil nil nil nil] 8 3 4 [nil 1 1 0 0 0 0 0 0] [nil
3 2 nil nil nil nil nil nil] [nil 4294967285 4294967295 nil nil nil nil nil nil]
1])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 4 0 4] [nil 2 4 0 5] [nil 3 4 5 4] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil])
(f4: after update:  [nil [nil [nil 3 4 5 4] [nil 2 4 0 5] [nil 3 4 5 4] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] [nil 8 3] nil nil
nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)]
[nil (1 . 1) (1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 0 0 0 0 0 0] [nil 3 4 nil
nil nil nil nil nil] [nil 4294967285 4294967280 nil nil nil nil nil nil] 2])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] [nil 8 3] nil nil
nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)]
[nil (1 . 1) (1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 0 0 0 0 0 0] [nil 3 4 nil
nil nil nil nil nil] [nil 4294967285 4294967280 nil nil nil nil nil nil] 2])
(f4: after filter redundant:  [nil [nil [nil 4 3] [nil 2 3] [nil 6 7] [nil 8 3]
nil nil nil nil] [nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
-1 . 1)] [nil (1 . 1) (1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 0 0 0 0 0 0] [nil
3 4 nil nil nil nil nil nil] [nil 4294967285 4294967280 nil nil nil nil nil nil]
2])
(In standardize, just before sort [nil [nil [nil 6 7] [nil 8 3]] [nil [nil (1 .
1) (-1 . 1)] [nil (1 . 1) (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285
4294967280] 2])
(f4: after standardize:  [nil [nil [nil 6 7] [nil 8 3]] [nil [nil (1 . 1) (-1 .
1)] [nil (1 . 1) (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280]
2])
(After f4:  [nil [nil [nil 6 7] [nil 8 3]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 .
1) (1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280] 2])
(exps :  [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 3 3] [nil 0 0 0]]])
(AM: groebner: [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 3 3] [nil 0 0 0]]]
[nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]])
convert_to_output..
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (-1 . 1)))
(poly 2)
(((3 0 3) (0 0 0)) ((1 . 1) (1 . 1)))

  3
{y  + 1,x - y}

(AM: Input: ((plus (expt x 5) (minus x)) (plus (expt x 4) (minus x))) (x y)
revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((5 5 0) (1 1 0)) ((1 . 1) (-1 . 1)))
(poly 2)
(((4 4 0) (1 1 0)) ((1 . 1) (-1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 5 0 5] [nil 1 0 1]] [nil [
nil 4 0 4] [nil 1 0 1]]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 3] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil
nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 5 0 5] [nil 1 0 1] [nil 4 0 4] nil nil nil nil]
[nil 0 4 0 0 0 2 3 0] [nil nil [nil 220 4294967295 0 5] [nil 44 4294967295 0 1]
[nil 176 4294967295 0 4] nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4
2])
(initialize_structures: divmasks)
[nil nil [nil 220 4294967295 0 5] [nil 44 4294967284 0 1] [nil 176 4294967295 0
4] nil nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 3] nil nil]
[nil [nil 0 0 0] [nil 5 0 5] [nil 1 0 1] [nil 4 0 4] nil nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 5 0 5] [nil 2 3] [nil (1 . 1) (-1 .
1)]) ([nil 4 0 4] [nil 4 3] [nil (1 . 1) (-1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 4 0 4] [nil 4 3] [nil (1 . 1) (-1 .
1)]) ([nil 5 0 5] [nil 2 3] [nil (1 . 1) (-1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil
nil] 0]
(initialize_structures: after normalize)
[nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil
nil] 0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil
nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 5 0 5] [nil 1 0 1] [nil 4 0 4] nil nil nil nil]
[nil 0 4 0 0 0 2 3 0] [nil nil [nil 220 4294967295 0 5] [nil 44 4294967284 0 1]
[nil 176 4294967295 0 4] nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4
2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2
3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8
1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 5] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 2 5] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 4 3] [nil 2 3] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967295
4294967295 nil nil] 2])
(HT:  [nil [nil [nil 5 0 5] [nil 5 0 5] [nil 1 0 1] [nil 4 0 4] [nil 5 0 5] nil
nil nil] [nil 0 4 0 0 0 2 3 0] [nil nil [nil 220 4294967295 0 5] [nil 44
4294967284 0 1] [nil 176 4294967295 0 4] nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 2 5] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 2 5] [nil 5 0 5])))
(sort_pairset_by_lcm: after (([nil 1 2 2 5] [nil 5 0 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 1 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  44)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 4 0 4] WITH HASH h = htmp + hash(e))
(hash(e) =  176)
(htmp =  44 ; h =  220)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  44 ; h =  88)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 2 0 2] [nil 5 0 5] [
nil 2 0 2] nil nil nil nil nil] [nil 0 3 0 0 0 2 0 0] [nil nil [nil 220
4294967295 2 5] [nil 88 4294967293 0 2] nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 2 0 2] [nil 5 0 5] [nil 2 0 2] nil nil nil nil nil] [nil 0 3 0 0
0 2 0 0] [nil nil [nil 220 4294967295 2 5] [nil 88 4294967293 0 2] nil nil nil
nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 5 0 5] WITH HASH h = htmp + hash(e))
(hash(e) =  220)
(htmp =  0 ; h =  220)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  0 ; h =  44)
(f4: after select:  [nil [nil [nil 1 2 2 5] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 1 0 1] [nil 5 0 5] [nil 2 0 2] [nil 1 0 1] nil
nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil nil [nil 220 4294967295 2 5] [nil 88
4294967293 0 2] [nil 44 4294967284 0 1] nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 5 0 5] [
nil 1 0 1] [nil 4 0 4] [nil 5 0 5] nil nil nil] [nil 0 4 0 0 0 2 3 0] [nil nil [
nil 220 4294967295 0 5] [nil 44 4294967284 0 1] [nil 176 4294967295 0 4] nil nil
nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 0 1] [nil 5 0 5] [
nil 2 0 2] [nil 1 0 1] nil nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil nil [nil 220
4294967295 2 5] [nil 88 4294967293 0 2] [nil 44 4294967284 0 1] nil nil nil nil]
[nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 0 1] [nil 5 0 5] [
nil 2 0 2] [nil 1 0 1] nil nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil nil [nil 220
4294967295 2 5] [nil 88 4294967293 1 2] [nil 44 4294967284 1 1] nil nil nil nil]
[nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 0 1] [nil 5 0 5] [nil 2 0 2] [
nil 1 0 1] nil nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil nil [nil 220 4294967295 2
5] [nil 88 4294967293 1 2] [nil 44 4294967284 1 1] nil nil nil nil] [nil 23 25
21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1] [nil 5 0 5] [nil 2 0
2] [nil 1 0 1] nil nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil nil [nil 220
4294967295 2 5] [nil 88 4294967293 1 2] [nil 44 4294967284 1 1] nil nil nil nil]
[nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1] [
nil 5 0 5] [nil 2 0 2] [nil 1 0 1] nil nil nil nil] [nil 0 3 0 0 0 2 4 0] [nil
nil [nil 220 4294967295 1 5] [nil 88 4294967293 2 2] [nil 44 4294967284 3 1] nil
nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 5 3]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] nil] [nil
[nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 2 3
[nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967295 4294967295 nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 3 4] [nil 2 3 2 5] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 1 3 4 4] [nil 2 3 2 5] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] nil] [nil [nil (1 .
1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 4 3 3 [nil 1 1 0
0] [nil 3 2 nil nil] [nil 4294967293 4294967295 nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 3 4 4] [nil 2 3 2 5] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 3 4 4] [nil 4 0 4])))
(sort_pairset_by_lcm: after (([nil 1 3 4 4] [nil 4 0 4])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 3) 2)
(sort_generators_by_position: after sort:  (1 3) 2)
(f4_select_normal: after sorting S-polys [nil 1 3] 2)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 4 0 4] WITH HASH h = htmp + hash(e))
(hash(e) =  176)
(htmp =  0 ; h =  176)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  0 ; h =  44)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 1] [nil 4 0 4] [
nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 176
4294967295 2 4] [nil 44 4294967284 0 1] nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 5 3] MULTIPLIED BY [nil 2 0 2] TO SYM HASHTABLE:)
(hash(etmp) =  88)
[nil [nil [nil 1 0 1] [nil 4 0 4] [nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0
0 3 0 0] [nil nil [nil 176 4294967295 2 4] [nil 44 4294967284 0 1] nil nil nil
nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 2 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  88)
(htmp =  88 ; h =  176)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  88 ; h =  132)
(f4: after select:  [nil [nil [nil 1 3 4 4] [nil 2 3 2 5] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 3 nil]])
(f4: symbol_ht: [nil [nil [nil 3 0 3] [nil 4 0 4] [nil 1 0 1] [nil 3 0 3] nil
nil nil nil] [nil 0 2 0 0 0 3 4 0] [nil nil [nil 176 4294967295 2 4] [nil 44
4294967284 0 1] [nil 132 4294967295 0 3] nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 2 0 2] [nil 5 0 5] [
nil 1 0 1] [nil 4 0 4] [nil 2 0 2] [nil 4 0 4] nil nil] [nil 0 4 5 0 0 2 3 0] [
nil nil [nil 220 4294967295 0 5] [nil 44 4294967284 0 1] [nil 176 4294967295 0 4
] [nil 88 4294967293 2 2] nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1
2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2]
)
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 3 0 3] [nil 4 0 4] [
nil 1 0 1] [nil 3 0 3] nil nil nil nil] [nil 0 2 0 0 0 3 4 0] [nil nil [nil 176
4294967295 2 4] [nil 44 4294967284 0 1] [nil 132 4294967295 0 3] nil nil nil nil
] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
I am here!!!
(INSERTING [nil 5 3] MULTIPLIED BY [nil 1 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  44)
[nil [nil [nil 3 0 3] [nil 4 0 4] [nil 1 0 1] [nil 3 0 3] nil nil nil nil nil
nil nil nil nil nil nil nil] [nil 0 2 0 0 0 4 0 0 0 0 0 0 0 3 0 0] [nil nil [nil
176 4294967295 2 4] [nil 44 4294967284 1 1] [nil 132 4294967295 1 3] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 4 2]
(MONOMIAL [nil 2 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  88)
(htmp =  44 ; h =  132)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  44 ; h =  88)
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 2 0 2] [nil 4 0 4] [
nil 1 0 1] [nil 3 0 3] [nil 2 0 2] nil nil nil nil nil nil nil nil nil nil nil]
[nil 0 2 0 0 0 4 0 0 0 5 0 0 0 3 0 0] [nil nil [nil 176 4294967295 2 4] [nil 44
4294967284 1 1] [nil 132 4294967295 2 3] [nil 88 4294967293 0 2] nil nil nil nil
nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3] [nil 4 5]] [nil [nil 2 4]] [nil
] [nil] 3 0 3 4 2 1 0 0 [nil 1 3 nil nil nil nil nil nil] [nil 3 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 2 0 2] [nil 4 0 4] [nil 1 0 1] [
nil 3 0 3] [nil 2 0 2] nil nil nil nil nil nil nil nil nil nil nil] [nil 0 2 0 0
0 4 0 0 0 5 0 0 0 3 0 0] [nil nil [nil 176 4294967295 2 4] [nil 44 4294967284 1
1] [nil 132 4294967295 2 3] [nil 88 4294967293 1 2] nil nil nil nil nil nil nil
nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3] [nil 4 5]] [nil [nil 2 4]
] [nil] [nil] 3 0 3 4 2 1 0 0 [nil 1 3 nil nil nil nil nil nil] [nil 3 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 2 0 2] [nil 4 0 4] [nil 1 0
1] [nil 3 0 3] [nil 2 0 2] nil nil nil nil nil nil nil nil nil nil nil] [nil 0 2
0 0 0 4 0 0 0 5 0 0 0 3 0 0] [nil nil [nil 176 4294967295 2 4] [nil 44
4294967284 1 1] [nil 132 4294967295 2 3] [nil 88 4294967293 1 2] nil nil nil nil
nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 16 5 2])
(convert_hashes_to_columns: sorted by hash [nil 2 4 5 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 4] [nil 2 3
]] [nil [nil 1 2]] [nil 2 4 5 3] [nil] 3 0 3 4 2 1 2 2 [nil 1 3 nil nil nil nil
nil nil] [nil 3 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 2 0 2] [
nil 4 0 4] [nil 1 0 1] [nil 3 0 3] [nil 2 0 2] nil nil nil nil nil nil nil nil
nil nil nil] [nil 0 2 0 0 0 4 0 0 0 5 0 0 0 3 0 0] [nil nil [nil 176 4294967295
1 4] [nil 44 4294967284 4 1] [nil 132 4294967295 2 3] [nil 88 4294967293 3 2]
nil nil nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil
2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16
16 5 2])
(f4_reduction: after sorting [nil [nil [nil 1 4] [nil 2 3]] [nil [nil 1 2]] [nil
2 4 5 3] [nil] 3 0 3 4 2 1 2 2 [nil 1 3 nil nil nil nil nil nil] [nil 3 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 4] [nil 2 3]] [nil [nil
1 2]] [nil 2 4 5 3] [nil [nil (1 . 1) (-1 . 1)]] 3 0 3 4 2 1 2 2 [nil 1 3 nil
nil nil nil nil nil] [nil 3 nil 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 4] [nil 2 3] [nil 3 4] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 4] [nil 2 3]] [nil [nil 3 4
]] [nil 2 4 5 3] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 4 2 1 2 2 [nil 1 3 nil nil
nil nil nil nil] [nil 3 nil 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 4] [nil 2 3]] [nil [nil 5 3]] [
nil 2 4 5 3] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 4 2 1 2 2 [nil 1 3 nil nil nil
nil nil nil] [nil 3 nil 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3]
nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 3 4 [nil 1 1 0 0 0 0 0 0] [
nil 3 2 nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil
nil] 1])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 4 0 4] [nil 2 4 0 5] [nil 3 4 4 2] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil])
(f4: after update:  [nil [nil [nil 3 4 5 2] [nil 2 4 0 5] [nil 3 4 4 2] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3] nil nil
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1
)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [nil 4 2
nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  3)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 3 4 5 2] [nil 2 4 0 5] [nil 3 4 4 2] nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 3 4 5 2] [nil 2 0 2])))
(sort_pairset_by_lcm: after (([nil 3 4 5 2] [nil 2 0 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (3 4) 2)
(sort_generators_by_position: after sort:  (3 4) 2)
(f4_select_normal: after sorting S-polys [nil 3 4] 2)
(INSERTING [nil 5 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 2 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  88)
(htmp =  0 ; h =  88)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  0 ; h =  44)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 3 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 1] [nil 2 0 2] [
nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88
4294967293 2 2] [nil 44 4294967284 0 1] nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 5 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 1 0 1] [nil 2 0 2] [nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0
0 3 0 0] [nil nil [nil 88 4294967293 2 2] [nil 44 4294967284 0 1] nil nil nil
nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 2 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  88)
(htmp =  0 ; h =  88)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  0 ; h =  44)
(f4: after select:  [nil [nil [nil 3 4 5 2] [nil 2 4 0 5] [nil 3 4 4 2] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 3]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 3 nil] [nil 4 nil]])
(f4: symbol_ht: [nil [nil [nil 1 0 1] [nil 2 0 2] [nil 1 0 1] nil nil nil nil
nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88 4294967293 2 2] [nil 44 4294967284 0
1] nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 5 0 5] [
nil 1 0 1] [nil 4 0 4] [nil 2 0 2] [nil 2 0 2] nil nil] [nil 0 4 5 0 0 2 3 0] [
nil nil [nil 220 4294967295 0 5] [nil 44 4294967284 0 1] [nil 176 4294967295 0 4
] [nil 88 4294967293 2 2] nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1
2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2]
)
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 0 1] [nil 2 0 2] [
nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88
4294967293 2 2] [nil 44 4294967284 0 1] nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 0 1] [nil 2 0 2] [
nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88
4294967293 2 2] [nil 44 4294967284 1 1] nil nil nil nil nil] [nil 23 25 21] 2 3
revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 3]] [nil] [nil] 2
0 2 2 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 0 1] [nil 2 0 2] [nil 1 0 1]
nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88 4294967293 2 2] [nil
44 4294967284 1 1] nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2 3 1
2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
)
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 3]] [nil] [
nil] 2 0 2 2 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1] [nil 2 0 2] [nil 1 0
1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil 88 4294967293 2 2] [
nil 44 4294967284 1 1] nil nil nil nil nil] [nil 23 25 21] 2 3 revgradlex [nil 2
3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8
3 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 2]] [nil 2 3] [nil] 2 0 2 2 1 1 1 1 [nil 3 nil nil nil nil nil nil nil] [
nil 4 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1] [
nil 2 0 2] [nil 1 0 1] nil nil nil nil nil] [nil 0 2 0 0 0 3 0 0] [nil nil [nil
88 4294967293 1 2] [nil 44 4294967284 2 1] nil nil nil nil nil] [nil 23 25 21] 2
3 revgradlex [nil 2 3 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0] [nil 1 2] 2 16 8 3 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 2]] [nil 2 3] [nil
] 2 0 2 2 1 1 1 1 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 2]] [
nil 2 3] [nil nil] 2 0 2 2 1 1 1 1 [nil 3 nil nil nil nil nil nil nil] [nil 4
nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil] [nil 2 3] [nil
nil] 0 0 0 2 1 1 1 1 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil] [nil 2 3] [nil nil] 0
0 0 2 1 1 1 1 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3]
nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [
nil 4 2 nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil
nil] 1])
(f4: after update:  [nil [nil [nil 3 4 5 2] [nil 2 4 0 5] [nil 3 4 4 2] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3] nil nil
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1
)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [nil 4 2
nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil nil] 1])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3] nil nil
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1
)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [nil 4 2
nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil nil] 1])
(f4: after filter redundant:  [nil [nil [nil 4 3] [nil 2 3] [nil 5 3] [nil 5 3]
nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [
nil 4 2 nil nil nil nil nil nil] [nil 4294967293 4294967295 nil nil nil nil nil
nil] 1])
(In standardize, just before sort [nil [nil [nil 5 3]] [nil [nil (1 . 1) (-1 . 1
)]] 1 1 1 [nil 0] [nil 1] [nil 4294967293] 1])
(f4: after standardize:  [nil [nil [nil 5 3]] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1
[nil 0] [nil 1] [nil 4294967293] 1])
(After f4:  [nil [nil [nil 5 3]] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 [nil 0] [nil
1] [nil 4294967293] 1])
(exps :  [nil [nil [nil 2 0 2] [nil 1 0 1]]])
(AM: groebner: [nil [nil [nil 2 0 2] [nil 1 0 1]]] [nil [nil (1 . 1) (-1 . 1)]])
convert_to_output..
(poly 1)
(((2 2 0) (1 1 0)) ((1 . 1) (-1 . 1)))

  2
{x  - x}

(AM: Input: ((plus (expt x 5) (minus x)) (plus (expt x 4) (minus x)) (plus (expt
x 3) (minus x))) (x) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 1 2 revgradlex])
(poly 1)
(((5 5) (1 1)) ((1 . 1) (-1 . 1)))
(poly 2)
(((4 4) (1 1)) ((1 . 1) (-1 . 1)))
(poly 3)
(((3 3) (1 1)) ((1 . 1) (-1 . 1)))
(AM: Converted: [nil 1 2 revgradlex] [nil [nil [nil 5 5] [nil 1 1]] [nil [nil 4
4] [nil 1 1]] [nil [nil 3 3] [nil 1 1]]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1
) (-1 . 1)] [nil (1 . 1) (-1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 6 0 0 [nil 0 0
0 0 0 0] [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 0]
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 3] [nil 5 3] nil nil nil] [nil [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 6 0 3 [nil
0 0 0 0 0 0] [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 0])
(HT:  [nil [nil [nil 0 0] [nil 5 5] [nil 1 1] [nil 4 4] [nil 3 3] nil nil nil] [
nil 5 0 2 0 0 4 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45 4294967295 0 1] [
nil 180 4294967295 0 4] [nil 135 4294967295 0 3] nil nil nil] [nil 27 18] 1 2
revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 5 2])
(initialize_structures: divmasks)
[nil nil [nil 225 4294967295 0 5] [nil 45 4294967294 0 1] [nil 180 4294967295 0
4] [nil 135 4294967294 0 3] nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 3] [nil 5 3] nil nil nil]
[nil [nil 0 0] [nil 5 5] [nil 1 1] [nil 4 4] [nil 3 3] nil nil nil]
3
(sort_gens_by_lead_increasing: before (([nil 5 5] [nil 2 3] [nil (1 . 1) (-1 . 1
)]) ([nil 4 4] [nil 4 3] [nil (1 . 1) (-1 . 1)]) ([nil 3 3] [nil 5 3] [nil (1 .
1) (-1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 3 3] [nil 5 3] [nil (1 . 1) (-1 . 1)
]) ([nil 4 4] [nil 4 3] [nil (1 . 1) (-1 . 1)]) ([nil 5 5] [nil 2 3] [nil (1 . 1
) (-1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 5 3] [nil 4 3] [nil 2 3] nil nil nil] [nil [nil (1 . 1) (-1 . 1)]
[nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 6 0 3 [nil 0 0 0 0 0
0] [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 0]
(initialize_structures: after normalize)
[nil [nil [nil 5 3] [nil 4 3] [nil 2 3] nil nil nil] [nil [nil (1 . 1) (-1 . 1)]
[nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 6 0 3 [nil 0 0 0 0 0
0] [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 0]
f4: Input
(Ring:  [nil 1 2 revgradlex])
(Basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] nil nil nil] [nil [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 6 0 3 [nil
0 0 0 0 0 0] [nil nil nil nil nil nil nil] [nil nil nil nil nil nil nil] 0])
(HT:  [nil [nil [nil 0 0] [nil 5 5] [nil 1 1] [nil 4 4] [nil 3 3] nil nil nil] [
nil 5 0 2 0 0 4 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45 4294967294 0 1] [
nil 180 4294967295 0 4] [nil 135 4294967294 0 3] nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 5 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0
0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 4] nil nil nil nil nil nil nil])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 1 [nil [nil 1 2 4 4] [nil 1 3 3 5] [nil 2 3 3 5] nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 4 4] [nil 1 3 2 5] [nil 2 3 3 5] nil nil nil nil
nil] 2])
(Basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] nil nil nil] [nil [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 6 3 3 [nil
0 0 0 0 0 0] [nil 1 2 3 nil nil nil] [nil 4294967294 4294967295 4294967295 nil
nil nil] 3])
(HT:  [nil [nil [nil 5 5] [nil 5 5] [nil 1 1] [nil 4 4] [nil 3 3] [nil 5 5] nil
nil] [nil 5 0 2 0 0 4 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45 4294967294
0 1] [nil 180 4294967295 0 4] [nil 135 4294967294 0 3] nil nil nil] [nil 27 18]
1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0] [nil 1] 1 32 8 5 2])
(plcm: [nil 3 0 0 nil])
(f4: iteration:  1)
(f4: available pairs: 2)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 4 4] [nil 1 3 2 5] [nil 2 3 3 5] nil nil nil
nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 2 4 4] [nil 4 4])))
(sort_pairset_by_lcm: after (([nil 1 2 4 4] [nil 4 4])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 5 3] MULTIPLIED BY [nil 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  45)
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
(MONOMIAL [nil 3 3] WITH HASH h = htmp + hash(e))
(hash(e) =  135)
(htmp =  45 ; h =  180)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  45 ; h =  90)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 2 2] [nil 4 4] [nil 2
2] nil nil nil nil nil] [nil 0 0 0 3 0 2 0 0] [nil nil [nil 180 4294967295 2 4]
[nil 90 4294967294 0 2] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(INSERTING [nil 4 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 2 2] [nil 4 4] [nil 2 2] nil nil nil nil nil] [nil 0 0 0 3 0 2 0
0] [nil nil [nil 180 4294967295 2 4] [nil 90 4294967294 0 2] nil nil nil nil nil
] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
(MONOMIAL [nil 4 4] WITH HASH h = htmp + hash(e))
(hash(e) =  180)
(htmp =  0 ; h =  180)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4: after select:  [nil [nil [nil 1 3 2 5] [nil 1 3 2 5] [nil 2 3 3 5] nil nil
nil nil nil] 1])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1] [nil 4 4] [nil 2 2] [nil 1 1] nil nil nil
nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil 180 4294967295 2 4] [nil 90 4294967294
0 2] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4
2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0] [nil 5 5] [nil 1
1] [nil 4 4] [nil 3 3] [nil 5 5] nil nil] [nil 5 0 2 0 0 4 3 0] [nil nil [nil
225 4294967295 0 5] [nil 45 4294967294 0 1] [nil 180 4294967295 0 4] [nil 135
4294967294 0 3] nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1] [nil 4 4] [nil 2
2] [nil 1 1] nil nil nil nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil 180 4294967295
2 4] [nil 90 4294967294 0 2] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27 18
] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1] 1 32 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1] [nil 4 4] [nil 2
2] [nil 1 1] nil nil nil nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil 180 4294967295
2 4] [nil 90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18
] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1] 1 32 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1] [nil 4 4] [nil 2 2] [nil 1 1
] nil nil nil nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil 180 4294967295 2 4] [nil
90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1] [nil 4 4] [nil 2 2] [
nil 1 1] nil nil nil nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil 180 4294967295 2 4
] [nil 90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18] 1
2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0] [nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1] [nil
4 4] [nil 2 2] [nil 1 1] nil nil nil nil] [nil 0 0 0 3 0 2 4 0] [nil nil [nil
180 4294967295 1 4] [nil 90 4294967294 2 2] [nil 45 4294967294 3 1] nil nil nil
nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 6 3]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1
)] [nil (1 . 1) (-1 . 1)] nil nil] 6 3 4 [nil 0 0 0 0 0 0] [nil 1 2 3 nil nil
nil] [nil 4294967294 4294967295 4294967295 nil nil nil] 3])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 1 [nil [nil 1 3 2 5] [nil 1 4 4 3] [nil 2 4 2 4] [nil 3 4 3 5] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil])
I am here!!!
(f4: after update:  [nil [nil [nil 1 3 2 5] [nil 1 4 5 3] [nil 2 4 2 4] [nil 3 4
3 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
] 2])
(f4: after update:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] nil nil] [
nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (-1 . 1)] nil nil] 6 4 4 [nil 1 1 1 0 0 0] [nil 4 2 3 nil nil nil] [nil
4294967294 4294967295 4294967295 nil nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 2)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 4 5 3] [nil 1 3 2 5] [nil 2 4 2 4] [nil 3 4 3
5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]
, npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 4 5 3] [nil 3 3])))
(sort_pairset_by_lcm: after (([nil 1 4 5 3] [nil 3 3])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 4) 2)
(sort_generators_by_position: after sort:  (1 4) 2)
(f4_select_normal: after sorting S-polys [nil 1 4] 2)
(INSERTING [nil 5 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
(MONOMIAL [nil 3 3] WITH HASH h = htmp + hash(e))
(hash(e) =  135)
(htmp =  0 ; h =  135)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 1] [nil 3 3] [nil 1
1] nil nil nil nil nil] [nil 2 0 0 0 0 0 3 0] [nil nil [nil 135 4294967294 2 3]
[nil 45 4294967294 0 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(INSERTING [nil 6 3] MULTIPLIED BY [nil 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  45)
[nil [nil [nil 1 1] [nil 3 3] [nil 1 1] nil nil nil nil nil] [nil 2 0 0 0 0 0 3
0] [nil nil [nil 135 4294967294 2 3] [nil 45 4294967294 0 1] nil nil nil nil nil
] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
(MONOMIAL [nil 2 2] WITH HASH h = htmp + hash(e))
(hash(e) =  90)
(htmp =  45 ; h =  135)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  45 ; h =  90)
(f4: after select:  [nil [nil [nil 1 3 2 5] [nil 1 3 2 5] [nil 2 4 2 4] [nil 3 4
3 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
] 1])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 4 nil]])
(f4: symbol_ht: [nil [nil [nil 2 2] [nil 3 3] [nil 1 1] [nil 2 2] nil nil nil
nil] [nil 2 0 0 4 0 0 3 0] [nil nil [nil 135 4294967294 2 3] [nil 45 4294967294
0 1] [nil 90 4294967294 0 2] nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4
2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 1 1] [nil 5 5] [nil 1
1] [nil 4 4] [nil 3 3] [nil 2 2] [nil 3 3] nil nil nil nil nil nil nil nil nil]
[nil 0 0 2 0 0 4 0 0 5 0 0 6 0 0 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45
4294967294 0 1] [nil 180 4294967295 0 4] [nil 135 4294967294 0 3] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 6 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 2 2] [nil 3 3] [nil 1
1] [nil 2 2] nil nil nil nil] [nil 2 0 0 4 0 0 3 0] [nil nil [nil 135 4294967294
2 3] [nil 45 4294967294 0 1] [nil 90 4294967294 0 2] nil nil nil nil] [nil 27 18
] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1] 1 32 8 4 2])
I am here!!!
(INSERTING [nil 6 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 2 2] [nil 3 3] [nil 1 1] [nil 2 2] nil nil nil nil nil nil nil
nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0 2 0 0 4 0 0 3 0] [nil nil [nil 135
4294967294 2 3] [nil 45 4294967294 1 1] [nil 90 4294967294 1 2] nil nil nil nil
nil nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 16 4 2]
(MONOMIAL [nil 2 2] WITH HASH h = htmp + hash(e))
(hash(e) =  90)
(htmp =  0 ; h =  90)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1] [nil 3 3] [nil 1
1] [nil 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0
0 2 0 0 4 0 0 3 0] [nil nil [nil 135 4294967294 2 3] [nil 45 4294967294 1 1] [
nil 90 4294967294 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 27
18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1] 1 32 16 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3] [nil 4 3]] [nil [nil 2 4]] [nil
] [nil] 3 0 3 3 2 1 0 0 [nil 1 4 nil nil nil nil nil nil] [nil 4 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1] [nil 3 3] [nil 1 1] [nil 2 2
] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0 2 0 0 4
0 0 3 0] [nil nil [nil 135 4294967294 2 3] [nil 45 4294967294 1 1] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3] [nil 4 3]] [nil [nil 2 4]
] [nil] [nil] 3 0 3 3 2 1 0 0 [nil 1 4 nil nil nil nil nil nil] [nil 4 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1] [nil 3 3] [nil 1 1] [
nil 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0 2
0 0 4 0 0 3 0] [nil nil [nil 135 4294967294 2 3] [nil 45 4294967294 1 1] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 4 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3] [nil 2 3
]] [nil [nil 1 2]] [nil 2 4 3] [nil] 3 0 3 3 2 1 2 1 [nil 1 4 nil nil nil nil
nil nil] [nil 4 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1] [nil
3 3] [nil 1 1] [nil 2 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0
0 0 0 0 0 0 0 2 0 0 4 0 0 3 0] [nil nil [nil 135 4294967294 1 3] [nil 45
4294967294 3 1] [nil 90 4294967294 2 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 16 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 3] [nil 2 3]] [nil [nil 1 2]] [nil
2 4 3] [nil] 3 0 3 3 2 1 2 1 [nil 1 4 nil nil nil nil nil nil] [nil 4 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3] [nil 2 3]] [nil [nil
1 2]] [nil 2 4 3] [nil nil] 3 0 3 3 2 1 2 1 [nil 1 4 nil nil nil nil nil nil] [
nil 4 nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3] [nil 2 3]] [nil] [nil 2
4 3] [nil nil] 0 0 0 3 2 1 2 1 [nil 1 4 nil nil nil nil nil nil] [nil 4 nil nil]
])
(f4: after reduction, matrix:  [nil [nil [nil 1 3] [nil 2 3]] [nil] [nil 2 4 3]
[nil nil] 0 0 0 3 2 1 2 1 [nil 1 4 nil nil nil nil nil nil] [nil 4 nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1
)] [nil (1 . 1) (-1 . 1)] nil nil] 6 4 4 [nil 1 1 1 0 0 0] [nil 4 2 3 nil nil
nil] [nil 4294967294 4294967295 4294967295 nil nil nil] 1])
(f4: after update:  [nil [nil [nil 1 3 2 5] [nil 1 3 2 5] [nil 2 4 2 4] [nil 3 4
3 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] 1])
(f4: after update:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] nil nil] [
nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (-1 . 1)] nil nil] 6 4 4 [nil 1 1 1 0 0 0] [nil 4 2 3 nil nil nil] [nil
4294967294 4294967295 4294967295 nil nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  3)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 3 2 5] [nil 1 3 2 5] [nil 2 4 2 4] [nil 3 4 3
5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 3 2 5] [nil 5 5])))
(sort_pairset_by_lcm: after (([nil 1 3 2 5] [nil 5 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 3) 2)
(sort_generators_by_position: after sort:  (1 3) 2)
(f4_select_normal: after sorting S-polys [nil 1 3] 2)
(INSERTING [nil 5 3] MULTIPLIED BY [nil 2 2] TO SYM HASHTABLE:)
(hash(etmp) =  90)
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
(MONOMIAL [nil 3 3] WITH HASH h = htmp + hash(e))
(hash(e) =  135)
(htmp =  90 ; h =  225)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  90 ; h =  135)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 3 3] [nil 5 5] [nil 3
3] nil nil nil nil nil] [nil 3 0 2 0 0 0 0 0] [nil nil [nil 225 4294967295 2 5]
[nil 135 4294967294 0 3] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3
2])
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 3 3] [nil 5 5] [nil 3 3] nil nil nil nil nil] [nil 3 0 2 0 0 0 0
0] [nil nil [nil 225 4294967295 2 5] [nil 135 4294967294 0 3] nil nil nil nil
nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
(MONOMIAL [nil 5 5] WITH HASH h = htmp + hash(e))
(hash(e) =  225)
(htmp =  0 ; h =  225)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4: after select:  [nil [nil [nil 1 3 2 5] [nil 1 3 2 5] [nil 2 4 2 4] [nil 3 4
3 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 3 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1] [nil 5 5] [nil 3 3] [nil 1 1] nil nil nil
nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil 225 4294967295 2 5] [nil 135 4294967294
0 3] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4
2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0] [nil 5 5] [nil 1
1] [nil 4 4] [nil 3 3] [nil 2 2] [nil 3 3] nil nil nil nil nil nil nil nil nil]
[nil 0 0 2 0 0 4 0 0 5 0 0 6 0 0 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45
4294967294 0 1] [nil 180 4294967295 0 4] [nil 135 4294967294 0 3] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 6 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1] [nil 5 5] [nil 3
3] [nil 1 1] nil nil nil nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil 225 4294967295
2 5] [nil 135 4294967294 0 3] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27
18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1] 1 32 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1] [nil 5 5] [nil 3
3] [nil 1 1] nil nil nil nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil 225 4294967295
2 5] [nil 135 4294967294 1 3] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27
18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1] 1 32 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1] [nil 5 5] [nil 3 3] [nil 1 1
] nil nil nil nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil 225 4294967295 2 5] [nil
135 4294967294 1 3] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1] [nil 5 5] [nil 3 3] [
nil 1 1] nil nil nil nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil 225 4294967295 2 5
] [nil 135 4294967294 1 3] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18]
1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0] [nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 3 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1] [nil
5 5] [nil 3 3] [nil 1 1] nil nil nil nil] [nil 3 0 2 0 0 0 4 0] [nil nil [nil
225 4294967295 1 5] [nil 135 4294967294 2 3] [nil 45 4294967294 3 1] nil nil nil
nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 3 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 3 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 5 3]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 3 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
[nil 5 3] nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (
-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 6 4 5 [nil 1 1 1 0 0
0] [nil 4 2 3 nil nil nil] [nil 4294967294 4294967295 4294967295 nil nil nil] 1]
)
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 5 0 3] [nil 2 5 0 4] [nil 3 5 0 5] [nil 4 5 4 3] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]
)
(f4: after update:  [nil [nil [nil 4 5 5 3] [nil 2 5 0 4] [nil 3 5 0 5] [nil 4 5
4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] 1])
(f4: after update:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] [nil 5 3]
nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] nil] 6 5 5 [nil 1 1 1 0 0 0] [nil 4
5 3 nil nil nil] [nil 4294967294 4294967294 4294967295 nil nil nil] 2])
I am here!!!
I am here!!!
(f4: iteration:  4)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 4 5 5 3] [nil 2 5 0 4] [nil 3 5 0 5] [nil 4 5 4
3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 4 5 5 3] [nil 3 3])))
(sort_pairset_by_lcm: after (([nil 4 5 5 3] [nil 3 3])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (4 5) 2)
(sort_generators_by_position: after sort:  (4 5) 2)
(f4_select_normal: after sorting S-polys [nil 4 5] 2)
(INSERTING [nil 6 3] MULTIPLIED BY [nil 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  45)
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
(MONOMIAL [nil 2 2] WITH HASH h = htmp + hash(e))
(hash(e) =  90)
(htmp =  45 ; h =  135)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  45 ; h =  90)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 4 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 2 2] [nil 3 3] [nil 2
2] nil nil nil nil nil] [nil 2 0 0 3 0 0 0 0] [nil nil [nil 135 4294967294 2 3]
[nil 90 4294967294 0 2] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(INSERTING [nil 5 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 2 2] [nil 3 3] [nil 2 2] nil nil nil nil nil] [nil 2 0 0 3 0 0 0
0] [nil nil [nil 135 4294967294 2 3] [nil 90 4294967294 0 2] nil nil nil nil nil
] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
(MONOMIAL [nil 3 3] WITH HASH h = htmp + hash(e))
(hash(e) =  135)
(htmp =  0 ; h =  135)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4: after select:  [nil [nil [nil 4 5 5 3] [nil 2 5 0 4] [nil 3 5 0 5] [nil 4 5
4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 4 nil] [nil 5 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1] [nil 3 3] [nil 2 2] [nil 1 1] nil nil nil
nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil 135 4294967294 2 3] [nil 90 4294967294
0 2] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4
2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0] [nil 5 5] [nil 1
1] [nil 4 4] [nil 3 3] [nil 2 2] [nil 3 3] nil nil nil nil nil nil nil nil nil]
[nil 0 0 2 0 0 4 0 0 5 0 0 6 0 0 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45
4294967294 0 1] [nil 180 4294967295 0 4] [nil 135 4294967294 0 3] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 6 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1] [nil 3 3] [nil 2
2] [nil 1 1] nil nil nil nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil 135 4294967294
2 3] [nil 90 4294967294 0 2] [nil 45 4294967294 0 1] nil nil nil nil] [nil 27 18
] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1] 1 32 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1] [nil 3 3] [nil 2
2] [nil 1 1] nil nil nil nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil 135 4294967294
2 3] [nil 90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18
] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1] 1 32 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 4 nil nil nil nil nil nil nil] [nil 5 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1] [nil 3 3] [nil 2 2] [nil 1 1
] nil nil nil nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil 135 4294967294 2 3] [nil
90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 4 nil nil nil nil nil nil nil] [nil 5 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1] [nil 3 3] [nil 2 2] [
nil 1 1] nil nil nil nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil 135 4294967294 2 3
] [nil 90 4294967294 1 2] [nil 45 4294967294 1 1] nil nil nil nil] [nil 27 18] 1
2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0] [nil 1] 1 32 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 4 nil nil nil nil nil nil nil]
[nil 5 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1] [nil
3 3] [nil 2 2] [nil 1 1] nil nil nil nil] [nil 2 0 0 3 0 0 4 0] [nil nil [nil
135 4294967294 1 3] [nil 90 4294967294 2 2] [nil 45 4294967294 3 1] nil nil nil
nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 4 nil nil nil nil nil nil nil] [nil 5 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 4 nil nil nil nil
nil nil nil] [nil 5 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 4 nil nil nil nil nil nil
nil] [nil 5 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 6 3]] [nil 2 3 4]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 4 nil nil nil nil nil nil nil]
[nil 5 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
[nil 5 3] [nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 .
1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 5 6 [nil 1 1 1 0 0 0 0 0
0 0 0 0] [nil 4 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294
4294967294 4294967295 nil nil nil nil nil nil nil nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 6 0 3] [nil 2 6 0 4] [nil 3 6 0 5] [nil 4 6 5 2] [nil 5 6
4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 4 6 6 2] [nil 5 6 4 3] [nil 3 6 0 5] [nil 4 6
5 2] [nil 5 6 4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] [nil 5 3]
[nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1
. 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 6 6 [nil 1 1 1 1 1 0 0 0 0 0 0 0]
[nil 6 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294 4294967294
4294967295 nil nil nil nil nil nil nil nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  5)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 4 6 6 2] [nil 5 6 4 3] [nil 3 6 0 5] [nil 4 6 5
2] [nil 5 6 4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 4 6 6 2] [nil 2 2])))
(sort_pairset_by_lcm: after (([nil 4 6 6 2] [nil 2 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0] nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (4 6) 2)
(sort_generators_by_position: after sort:  (4 6) 2)
(f4_select_normal: after sorting S-polys [nil 4 6] 2)
(INSERTING [nil 6 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil nil
nil nil nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 1 2]
(MONOMIAL [nil 2 2] WITH HASH h = htmp + hash(e))
(hash(e) =  90)
(htmp =  0 ; h =  90)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 4 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 1] [nil 2 2] [nil 1
1] nil nil nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [
nil 45 4294967294 0 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(INSERTING [nil 6 3] MULTIPLIED BY [nil 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 1 1] [nil 2 2] [nil 1 1] nil nil nil nil nil] [nil 0 0 0 2 0 0 3
0] [nil nil [nil 90 4294967294 2 2] [nil 45 4294967294 0 1] nil nil nil nil nil]
[nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
(MONOMIAL [nil 2 2] WITH HASH h = htmp + hash(e))
(hash(e) =  90)
(htmp =  0 ; h =  90)
(MONOMIAL [nil 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(f4: after select:  [nil [nil [nil 4 6 6 2] [nil 5 6 4 3] [nil 3 6 0 5] [nil 4 6
5 2] [nil 5 6 4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 3]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 4 nil] [nil 6 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1] [nil 2 2] [nil 1 1] nil nil nil nil nil] [
nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [nil 45 4294967294 0 1]
nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0] [nil 5 5] [nil 1
1] [nil 4 4] [nil 3 3] [nil 2 2] [nil 2 2] nil nil nil nil nil nil nil nil nil]
[nil 0 0 2 0 0 4 0 0 5 0 0 6 0 0 3 0] [nil nil [nil 225 4294967295 0 5] [nil 45
4294967294 0 1] [nil 180 4294967295 0 4] [nil 135 4294967294 0 3] [nil 90
4294967294 2 2] nil nil nil nil nil nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 16 6 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1] [nil 2 2] [nil 1
1] nil nil nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [
nil 45 4294967294 0 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1] [nil 2 2] [nil 1
1] nil nil nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [
nil 45 4294967294 1 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2]
)
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 3]] [nil] [nil] 2
0 2 2 1 1 0 0 [nil 4 nil nil nil nil nil nil nil] [nil 6 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1] [nil 2 2] [nil 1 1] nil nil
nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [nil 45
4294967294 1 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 3]] [nil] [
nil] 2 0 2 2 1 1 0 0 [nil 4 nil nil nil nil nil nil nil] [nil 6 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1] [nil 2 2] [nil 1 1]
nil nil nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90 4294967294 2 2] [nil
45 4294967294 1 1] nil nil nil nil nil] [nil 27 18] 1 2 revgradlex [nil 4 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1] 1 32 8 3 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 2]] [nil 2 3] [nil] 2 0 2 2 1 1 1 1 [nil 4 nil nil nil nil nil nil nil] [
nil 6 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1] [nil
2 2] [nil 1 1] nil nil nil nil nil] [nil 0 0 0 2 0 0 3 0] [nil nil [nil 90
4294967294 1 2] [nil 45 4294967294 2 1] nil nil nil nil nil] [nil 27 18] 1 2
revgradlex [nil 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1] 1 32 8 3 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 2]] [nil 2 3] [nil
] 2 0 2 2 1 1 1 1 [nil 4 nil nil nil nil nil nil nil] [nil 6 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 2]] [
nil 2 3] [nil nil] 2 0 2 2 1 1 1 1 [nil 4 nil nil nil nil nil nil nil] [nil 6
nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil] [nil 2 3] [nil
nil] 0 0 0 2 1 1 1 1 [nil 4 nil nil nil nil nil nil nil] [nil 6 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil] [nil 2 3] [nil nil] 0
0 0 2 1 1 1 1 [nil 4 nil nil nil nil nil nil nil] [nil 6 nil]])
(f4: after reduction, basis:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
[nil 5 3] [nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 .
1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 6 6 [nil 1 1 1 1 1 0 0 0
0 0 0 0] [nil 6 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294
4294967294 4294967295 nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 6 6 2] [nil 5 6 4 3] [nil 3 6 0 5] [nil 4 6
5 2] [nil 5 6 4 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] [nil 5 3]
[nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1
. 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 6 6 [nil 1 1 1 1 1 0 0 0 0 0 0 0]
[nil 6 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294 4294967294
4294967295 nil nil nil nil nil nil nil nil nil] 1])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3] [nil 5
3] [nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (
-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 6 6 [nil 1 1 1 1 1 0 0 0 0 0 0
0] [nil 6 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294 4294967294
4294967295 nil nil nil nil nil nil nil nil nil] 1])
(f4: after filter redundant:  [nil [nil [nil 5 3] [nil 4 3] [nil 2 3] [nil 6 3]
[nil 5 3] [nil 6 3] nil nil nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (-1 .
1)] [nil (1 . 1) (-1 . 1)] nil nil nil nil nil nil] 12 6 6 [nil 1 1 1 1 1 0 0 0
0 0 0 0] [nil 6 5 3 nil nil nil nil nil nil nil nil nil] [nil 4294967294
4294967294 4294967295 nil nil nil nil nil nil nil nil nil] 1])
(In standardize, just before sort [nil [nil [nil 6 3]] [nil [nil (1 . 1) (-1 . 1
)]] 1 1 1 [nil 0] [nil 1] [nil 4294967294] 1])
(f4: after standardize:  [nil [nil [nil 6 3]] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1
[nil 0] [nil 1] [nil 4294967294] 1])
(After f4:  [nil [nil [nil 6 3]] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 [nil 0] [nil
1] [nil 4294967294] 1])
(exps :  [nil [nil [nil 2 2] [nil 1 1]]])
(AM: groebner: [nil [nil [nil 2 2] [nil 1 1]]] [nil [nil (1 . 1) (-1 . 1)]])
convert_to_output..
(poly 1)
(((2 2) (1 1)) ((1 . 1) (-1 . 1)))

  2
{x  - x}

(AM: Input: ((plus (times x y) (minus x)) (plus (times x (expt y 2)) y)) (x y)
revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 2 3 revgradlex])
(poly 1)
(((2 1 1) (1 1 0)) ((1 . 1) (-1 . 1)))
(poly 2)
(((3 1 2) (1 0 1)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 2 3 revgradlex] [nil [nil [nil 1 1 2] [nil 1 0 1]] [nil [
nil 1 2 3] [nil 0 1 1]]] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 1 0 1] [nil 1 2 3] [nil 0 1 1] nil
nil nil] [nil 3 4 0 0 2 5 0 0] [nil nil [nil 51 4294967295 0 2] [nil 23
4294967295 0 1] [nil 79 4294967295 0 3] [nil 28 4294967295 0 1] nil nil nil] [
nil 6 11 17] 2 3 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(initialize_structures: divmasks)
[nil nil [nil 51 4294967285 0 2] [nil 23 4294967285 0 1] [nil 79 4294967285 0 3]
[nil 28 4294967280 0 1] nil nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 5] nil nil]
[nil [nil 0 0 0] [nil 1 1 2] [nil 1 0 1] [nil 1 2 3] [nil 0 1 1] nil nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 1 1 2] [nil 2 3] [nil (1 . 1) (-1 .
1)]) ([nil 1 2 3] [nil 4 5] [nil (1 . 1) (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 1 1 2] [nil 2 3] [nil (1 . 1) (-1 .
1)]) ([nil 1 2 3] [nil 4 5] [nil (1 . 1) (1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil
] 0]
(initialize_structures: after normalize)
[nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1)
(1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil nil nil
] 0]
f4: Input
(Ring:  [nil 2 3 revgradlex])
(Basis:  [nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0] [nil 1 1 2] [nil 1 0 1] [nil 1 2 3] [nil 0 1 1] nil
nil nil] [nil 3 4 0 0 2 5 0 0] [nil nil [nil 51 4294967285 0 2] [nil 23
4294967285 0 1] [nil 79 4294967285 0 3] [nil 28 4294967280 0 1] nil nil nil] [
nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0
0 0] [nil nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2
1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1
2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 3] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 4 3] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285
4294967285 nil nil] 2])
(HT:  [nil [nil [nil 1 2 3] [nil 1 1 2] [nil 1 0 1] [nil 1 2 3] [nil 0 1 1] [nil
1 2 3] nil nil] [nil 3 4 0 0 2 5 0 0] [nil nil [nil 51 4294967285 0 2] [nil 23
4294967285 0 1] [nil 79 4294967285 0 3] [nil 28 4294967280 0 1] nil nil nil] [
nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 4 3] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 4 3] [nil 1 2 3])))
(sort_pairset_by_lcm: after (([nil 1 2 4 3] [nil 1 2 3])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  28)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  28 ; h =  79)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  23)
(htmp =  28 ; h =  51)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 1 2] [nil 1 2 3] [
nil 1 1 2] nil nil nil nil nil] [nil 2 0 0 0 3 0 0 0] [nil nil [nil 79
4294967285 2 3] [nil 51 4294967285 0 2] nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 4 5] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 1 1 2] [nil 1 2 3] [nil 1 1 2] nil nil nil nil nil] [nil 2 0 0 0
3 0 0 0] [nil nil [nil 79 4294967285 2 3] [nil 51 4294967285 0 2] nil nil nil
nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  79)
(htmp =  0 ; h =  79)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  28)
(htmp =  0 ; h =  28)
(f4: after select:  [nil [nil [nil 1 2 4 3] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 1] [nil 1 2 3] [nil 1 1 2] [nil 0 1 1] nil
nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil nil [nil 79 4294967285 2 3] [nil 51
4294967285 0 2] [nil 28 4294967280 0 1] nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 1 1 2] [
nil 1 0 1] [nil 1 2 3] [nil 0 1 1] [nil 1 2 3] nil nil] [nil 3 4 0 0 2 5 0 0] [
nil nil [nil 51 4294967285 0 2] [nil 23 4294967285 0 1] [nil 79 4294967285 0 3]
[nil 28 4294967280 0 1] nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 1] [nil 1 2 3] [
nil 1 1 2] [nil 0 1 1] nil nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil nil [nil 79
4294967285 2 3] [nil 51 4294967285 0 2] [nil 28 4294967280 0 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 1 1] [nil 1 2 3] [
nil 1 1 2] [nil 0 1 1] nil nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil nil [nil 79
4294967285 2 3] [nil 51 4294967285 1 2] [nil 28 4294967280 1 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 1 1] [nil 1 2 3] [nil 1 1 2] [
nil 0 1 1] nil nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil nil [nil 79 4294967285 2
3] [nil 51 4294967285 1 2] [nil 28 4294967280 1 1] nil nil nil nil] [nil 6 11 17
] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 1 1] [nil 1 2 3] [nil 1 1
2] [nil 0 1 1] nil nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil nil [nil 79
4294967285 2 3] [nil 51 4294967285 1 2] [nil 28 4294967280 1 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 1 1] [
nil 1 2 3] [nil 1 1 2] [nil 0 1 1] nil nil nil nil] [nil 2 0 0 0 3 4 0 0] [nil
nil [nil 79 4294967285 1 3] [nil 51 4294967285 2 2] [nil 28 4294967280 3 1] nil
nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 2 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 2 5]] [nil 2 3 4]
[nil [nil (1 . 1) (1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 2 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] nil] [nil
[nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] nil] 4 2 3 [
nil 0 0 0 0] [nil 1 2 nil nil] [nil 4294967285 4294967285 nil nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 3 2] [nil 2 3 2 3] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 1 3 2 2] [nil 2 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] nil] [nil [nil (1 .
1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)] nil] 4 3 3 [nil 1 1 0 0
] [nil 3 2 nil nil] [nil 4294967285 4294967285 nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 3 2 2] [nil 2 3 2 3] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 3 2 2] [nil 1 1 2])))
(sort_pairset_by_lcm: after (([nil 1 3 2 2] [nil 1 1 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 3) 2)
(sort_generators_by_position: after sort:  (1 3) 2)
(f4_select_normal: after sorting S-polys [nil 1 3] 2)
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  0 ; h =  51)
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  23)
(htmp =  0 ; h =  23)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 1] [nil 1 1 2] [
nil 1 0 1] nil nil nil nil nil] [nil 3 0 0 0 2 0 0 0] [nil nil [nil 51
4294967285 2 2] [nil 23 4294967285 0 1] nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 2 5] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 1 0 1] [nil 1 1 2] [nil 1 0 1] nil nil nil nil nil] [nil 3 0 0 0
2 0 0 0] [nil nil [nil 51 4294967285 2 2] [nil 23 4294967285 0 1] nil nil nil
nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  0 ; h =  51)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  28)
(htmp =  0 ; h =  28)
(f4: after select:  [nil [nil [nil 1 3 2 2] [nil 2 3 2 3] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 1 nil] [nil 3 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 1] [nil 1 1 2] [nil 1 0 1] [nil 0 1 1] nil
nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil nil [nil 51 4294967285 2 2] [nil 23
4294967285 0 1] [nil 28 4294967280 0 1] nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0] [nil 1 1 2] [
nil 1 0 1] [nil 1 2 3] [nil 0 1 1] [nil 1 1 2] nil nil] [nil 3 4 0 0 2 5 0 0] [
nil nil [nil 51 4294967285 0 2] [nil 23 4294967285 0 1] [nil 79 4294967285 0 3]
[nil 28 4294967280 0 1] nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 1] [nil 1 1 2] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil nil [nil 51
4294967285 2 2] [nil 23 4294967285 0 1] [nil 28 4294967280 0 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 1 1] [nil 1 1 2] [
nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil nil [nil 51
4294967285 2 2] [nil 23 4294967285 1 1] [nil 28 4294967280 1 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 1 1] [nil 1 1 2] [nil 1 0 1] [
nil 0 1 1] nil nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil nil [nil 51 4294967285 2
2] [nil 23 4294967285 1 1] [nil 28 4294967280 1 1] nil nil nil nil] [nil 6 11 17
] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 1 1] [nil 1 1 2] [nil 1 0
1] [nil 0 1 1] nil nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil nil [nil 51
4294967285 2 2] [nil 23 4294967285 1 1] [nil 28 4294967280 1 1] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2]] [nil [
nil 1 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 3 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 1 1] [
nil 1 1 2] [nil 1 0 1] [nil 0 1 1] nil nil nil nil] [nil 3 0 0 0 2 4 0 0] [nil
nil [nil 51 4294967285 1 2] [nil 23 4294967285 2 1] [nil 28 4294967280 3 1] nil
nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2]] [nil [nil 1 3]] [nil 2 3 4] [
nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2]] [nil [nil 1 3]] [
nil 2 3 4] [nil [nil (1 . 1) (1 . 1)]] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil
nil nil nil] [nil 3 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2]] [nil [nil 2 3]] [nil 2
3 4] [nil [nil (1 . 1) (1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 3 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2]] [nil [nil 3 5]] [nil 2 3 4]
[nil [nil (1 . 1) (1 . 1)]] 1 1 1 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil]
[nil 3 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5]
nil nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1)
(1 . 1)] [nil (1 . 1) (1 . 1)] nil nil nil nil] 8 3 4 [nil 1 1 0 0 0 0 0 0] [nil
3 2 nil nil nil nil nil nil] [nil 4294967285 4294967285 nil nil nil nil nil nil]
1])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 4 0 2] [nil 2 4 0 3] [nil 3 4 3 2] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil])
(f4: after update:  [nil [nil [nil 3 4 2 2] [nil 2 4 0 3] [nil 3 4 3 2] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5] nil nil
nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1)]
[nil (1 . 1) (1 . 1)] nil nil nil nil] 8 4 4 [nil 1 1 1 0 0 0 0 0] [nil 4 2 nil
nil nil nil nil nil] [nil 4294967285 4294967285 nil nil nil nil nil nil] 1])
I am here!!!
I am here!!!
(f4: iteration:  3)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 3 4 2 2] [nil 2 4 0 3] [nil 3 4 3 2] nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 3 4 2 2] [nil 1 1 2])))
(sort_pairset_by_lcm: after (([nil 3 4 2 2] [nil 1 1 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0] nil nil nil nil nil nil nil]
[nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (3 4) 2)
(sort_generators_by_position: after sort:  (3 4) 2)
(f4_select_normal: after sorting S-polys [nil 3 4] 2)
(INSERTING [nil 2 5] MULTIPLIED BY [nil 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 1 2]
(MONOMIAL [nil 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  0 ; h =  51)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  28)
(htmp =  0 ; h =  28)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3] nil] [nil nil nil]
[nil] [nil] 2 0 1 1 1 0 0 0 [nil 3 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 1] [nil 1 1 2] [
nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 0 2 3 0 0] [nil nil [nil 51
4294967285 2 2] [nil 28 4294967280 0 1] nil nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 3 2])
(INSERTING [nil 3 5] MULTIPLIED BY [nil 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  28)
[nil [nil [nil 0 1 1] [nil 1 1 2] [nil 0 1 1] nil nil nil nil nil] [nil 0 0 0 0
2 3 0 0] [nil nil [nil 51 4294967285 2 2] [nil 28 4294967280 0 1] nil nil nil
nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 3 2]
(MONOMIAL [nil 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  23)
(htmp =  28 ; h =  51)
(MONOMIAL [nil 0 1 1] WITH HASH h = htmp + hash(e))
(hash(e) =  28)
(htmp =  28 ; h =  56)
(f4: after select:  [nil [nil [nil 3 4 2 2] [nil 2 4 0 3] [nil 3 4 3 2] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3] nil] [nil [nil 2 4]] [nil] [nil] 2 0 2 1 1 1 0
0 [nil 3 nil] [nil 4 nil]])
(f4: symbol_ht: [nil [nil [nil 0 2 2] [nil 1 1 2] [nil 0 1 1] [nil 0 2 2] nil
nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil nil [nil 51 4294967285 2 2] [nil 28
4294967280 0 1] [nil 56 4294967280 0 2] nil nil nil nil] [nil 6 11 17] 2 3
revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 1 1] [nil 1 1 2] [
nil 1 0 1] [nil 1 2 3] [nil 0 1 1] [nil 1 1 2] nil nil] [nil 3 4 0 0 2 5 0 0] [
nil nil [nil 51 4294967285 0 2] [nil 23 4294967285 0 1] [nil 79 4294967285 0 3]
[nil 28 4294967280 0 1] nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 5 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 2 2] [nil 1 1 2] [
nil 0 1 1] [nil 0 2 2] nil nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil nil [nil 51
4294967285 2 2] [nil 28 4294967280 0 1] [nil 56 4294967280 0 2] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 2 2] [nil 1 1 2] [
nil 0 1 1] [nil 0 2 2] nil nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil nil [nil 51
4294967285 2 2] [nil 28 4294967280 1 1] [nil 56 4294967280 1 2] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [nil] 2
0 2 3 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 2 2] [nil 1 1 2] [nil 0 1 1] [
nil 0 2 2] nil nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil nil [nil 51 4294967285 2
2] [nil 28 4294967280 1 1] [nil 56 4294967280 1 2] nil nil nil nil] [nil 6 11 17
] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3]] [nil [nil 2 4]] [nil] [
nil] 2 0 2 3 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 2 2] [nil 1 1 2] [nil 0 1
1] [nil 0 2 2] nil nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil nil [nil 51
4294967285 2 2] [nil 28 4294967280 1 1] [nil 56 4294967280 1 2] nil nil nil nil]
[nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 4 3])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3]] [nil [
nil 1 2]] [nil 2 4 3] [nil] 2 0 2 3 1 1 1 2 [nil 3 nil nil nil nil nil nil nil]
[nil 4 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 2 2] [
nil 1 1 2] [nil 0 1 1] [nil 0 2 2] nil nil nil nil] [nil 0 4 0 0 2 3 0 0] [nil
nil [nil 51 4294967285 1 2] [nil 28 4294967280 3 1] [nil 56 4294967280 2 2] nil
nil nil nil] [nil 6 11 17] 2 3 revgradlex [nil 1 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2] 2 16 8 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 3]] [nil [nil 1 2]] [nil 2 4 3] [
nil] 2 0 2 3 1 1 1 2 [nil 3 nil nil nil nil nil nil nil] [nil 4 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3]] [nil [nil 1 2]] [
nil 2 4 3] [nil [nil (1 . 1) (-1 . 1)]] 2 0 2 3 1 1 1 2 [nil 3 nil nil nil nil
nil nil nil] [nil 4 1 nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3] [nil 2 3] nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3]] [nil [nil 2 3]] [nil 2
4 3] [nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 3 nil nil nil nil nil nil
nil] [nil 4 1 nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 3]] [nil [nil 6 5]] [nil 2 4 3]
[nil [nil (1 . 1) (-1 . 1)]] 1 1 1 3 1 1 1 2 [nil 3 nil nil nil nil nil nil nil]
[nil 4 1 nil]])
(f4: after reduction, basis:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5]
[nil 6 5] nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1
. 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 8 4 5 [
nil 1 1 1 0 0 0 0 0] [nil 4 2 nil nil nil nil nil nil] [nil 4294967285
4294967285 nil nil nil nil nil nil] 1])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 5 0 3] [nil 2 5 0 3] [nil 3 5 0 3] [nil 4 5 2 3] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 4 5 2 3] [nil 2 5 0 3] [nil 3 5 0 3] [nil 4 5
2 3] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil] 0])
(f4: after update:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5] [nil 6 5]
nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (1 .
1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 8 5 5 [nil 1 1 1 0
0 0 0 0] [nil 4 5 nil nil nil nil nil nil] [nil 4294967285 4294967280 nil nil
nil nil nil nil] 2])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5] [nil 6
5] nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (
1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 8 5 5 [nil 1 1
1 0 0 0 0 0] [nil 4 5 nil nil nil nil nil nil] [nil 4294967285 4294967280 nil
nil nil nil nil nil] 2])
(f4: after filter redundant:  [nil [nil [nil 2 3] [nil 4 5] [nil 2 5] [nil 3 5]
[nil 6 5] nil nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1
. 1) (1 . 1)] [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] nil nil nil] 8 5 5 [
nil 1 1 1 0 0 0 0 0] [nil 4 5 nil nil nil nil nil nil] [nil 4294967285
4294967280 nil nil nil nil nil nil] 2])
(In standardize, just before sort [nil [nil [nil 3 5] [nil 6 5]] [nil [nil (1 .
1) (1 . 1)] [nil (1 . 1) (-1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285
4294967280] 2])
(f4: after standardize:  [nil [nil [nil 3 5] [nil 6 5]] [nil [nil (1 . 1) (1 . 1
)] [nil (1 . 1) (-1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280]
2])
(After f4:  [nil [nil [nil 3 5] [nil 6 5]] [nil [nil (1 . 1) (1 . 1)] [nil (1 .
1) (-1 . 1)]] 2 2 2 [nil 0 0] [nil 1 2] [nil 4294967285 4294967280] 2])
(exps :  [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 2 2] [nil 0 1 1]]])
(AM: groebner: [nil [nil [nil 1 0 1] [nil 0 1 1]] [nil [nil 0 2 2] [nil 0 1 1]]]
[nil [nil (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)]])
convert_to_output..
(poly 1)
(((1 1 0) (1 0 1)) ((1 . 1) (1 . 1)))
(poly 2)
(((2 0 2) (1 0 1)) ((1 . 1) (-1 . 1)))

  2
{y  - y,x + y}

(AM: Input: ((plus (times x y) (minus x))) (a b c d e f g x y) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 9 10 revgradlex])
(poly 1)
(((2 0 0 0 0 0 0 0 1 1) (1 0 0 0 0 0 0 0 1 0)) ((1 . 1) (-1 . 1)))
(AM: Converted: [nil 9 10 revgradlex] [nil [nil [nil 0 0 0 0 0 0 0 1 1 2] [nil 0
0 0 0 0 0 0 1 0 1]]] [nil [nil (1 . 1) (-1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil] [nil nil nil] 2 0 0 [nil 0 0] [nil nil nil] [nil nil nil] 0]
[nil [nil [nil 0 0 0 0 0 0 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0
0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 3 24 6 17 27 29 10 22 13 14] 9
10 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1
2 3 4 5 6 7 8 9] 9 3 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] nil] [nil [nil (1 . 1) (-1 . 1)] nil] 2 0 1 [nil 0
0] [nil nil nil] [nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0 0 0 0 0 0 0] [nil 0 0 0 0 0 0 0 1 1 2] [nil 0 0 0 0
0 0 0 1 0 1] nil nil nil nil nil] [nil 2 0 0 0 0 3 0 0] [nil nil [nil 63
134217727 0 2] [nil 36 134217727 0 1] nil nil nil nil nil] [nil 3 24 6 17 27 29
10 22 13 14] 9 10 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2 3 4 5 6 7 8 9] 9 3 8 3 2])
+++ Error: putv index range 28

(AM: Input: ((plus (times x y) (minus x)) (plus (times x (expt y 2)) y)) (a b c
d e f g x y) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 9 10 revgradlex])
(poly 1)
(((2 0 0 0 0 0 0 0 1 1) (1 0 0 0 0 0 0 0 1 0)) ((1 . 1) (-1 . 1)))
(poly 2)
(((3 0 0 0 0 0 0 0 1 2) (1 0 0 0 0 0 0 0 0 1)) ((1 . 1) (1 . 1)))
(AM: Converted: [nil 9 10 revgradlex] [nil [nil [nil 0 0 0 0 0 0 0 1 1 2] [nil 0
0 0 0 0 0 0 1 0 1]] [nil [nil 0 0 0 0 0 0 0 1 2 3] [nil 0 0 0 0 0 0 0 0 1 1]]] [
nil [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0 0 0 0 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0
0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 12 23 23 5 5 4 28 1 18 14] 9
10 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1
2 3 4 5 6 7 8 9] 9 3 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 5] nil nil] [nil [nil (1 . 1) (-1 . 1)] [nil
(1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil nil
nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0 0 0 0 0 0 0] [nil 0 0 0 0 0 0 0 1 1 2] [nil 0 0 0 0
0 0 0 1 0 1] [nil 0 0 0 0 0 0 0 1 2 3] [nil 0 0 0 0 0 0 0 0 1 1] nil nil nil] [
nil 2 3 4 5 0 0 0 0] [nil nil [nil 47 134217727 0 2] [nil 15 134217727 0 1] [nil
79 134217727 0 3] [nil 32 134217727 0 1] nil nil nil] [nil 12 23 23 5 5 4 28 1
18 14] 9 10 revgradlex [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0] [nil 1 2 3 4 5 6 7 8 9] 9 3 8 5 2])
+++ Error: putv index range 28

(AM: Input: ((plus (times x y z) (minus 1)) (plus (times x y) (times x z) (times
y z))) (x y z) revgradlex)
convert_to_internal..
(convert_to_internal: ring: [nil 3 4 revgradlex])
(poly 1)
(((3 1 1 1) (0 0 0 0)) ((1 . 1) (-1 . 1)))
(poly 2)
(((2 1 1 0) (2 1 0 1) (2 0 1 1)) ((1 . 1) (1 . 1) (1 . 1)))
(AM: Converted: [nil 3 4 revgradlex] [nil [nil [nil 1 1 1 3] [nil 0 0 0 0]] [nil
[nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2]]] [nil [nil (1 . 1) (-1 . 1)] [nil (1
. 1) (1 . 1) (1 . 1)]])
(Hashtable size:  8)
I am here!!!
I am here!!!
I am here!!!
I am here!!!
I am here!!!
(On initialize)
(initialize_structures..)
[nil [nil nil nil nil nil] [nil nil nil nil nil] 4 0 0 [nil 0 0 0 0] [nil nil
nil nil nil] [nil nil nil nil nil] 0]
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(initialize_structures: filled)
(Basis:  [nil [nil [nil 2 3] [nil 4 5 6] nil nil] [nil [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil]
[nil nil nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0] [nil 1 1 1 3] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0
1 2] [nil 0 1 1 2] nil nil] [nil 5 3 6 0 0 0 2 4] [nil nil [nil 45 1073741823 0
3] [nil 0 1073741823 0 0] [nil 38 1073741823 0 2] [nil 22 1073741823 0 2] [nil
30 1073741823 0 2] nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 6 2])
(initialize_structures: divmasks)
[nil nil [nil 45 1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2]
[nil 22 1073741385 0 2] [nil 30 1073741312 0 2] nil nil]
(sort_gens_by_lead_increasing: input)
[nil [nil 2 3] [nil 4 5 6] nil nil]
[nil [nil 0 0 0 0] [nil 1 1 1 3] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil
0 1 1 2] nil nil]
2
(sort_gens_by_lead_increasing: before (([nil 1 1 1 3] [nil 2 3] [nil (1 . 1) (-1
. 1)]) ([nil 1 1 0 2] [nil 4 5 6] [nil (1 . 1) (1 . 1) (1 . 1)])))
(sort_gens_by_lead_increasing: after (([nil 1 1 0 2] [nil 4 5 6] [nil (1 . 1) (1
. 1) (1 . 1)]) ([nil 1 1 1 3] [nil 2 3] [nil (1 . 1) (-1 . 1)])))
(initialize_structures: after sort by lead)
[nil [nil [nil 4 5 6] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil
nil nil nil] 0]
(initialize_structures: after normalize)
[nil [nil [nil 4 5 6] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil
(1 . 1) (-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [nil nil
nil nil nil] 0]
f4: Input
(Ring:  [nil 3 4 revgradlex])
(Basis:  [nil [nil [nil 4 5 6] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1) (1 .
1)] [nil (1 . 1) (-1 . 1)] nil nil] 4 0 2 [nil 0 0 0 0] [nil nil nil nil nil] [
nil nil nil nil nil] 0])
(HT:  [nil [nil [nil 0 0 0 0] [nil 1 1 1 3] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0
1 2] [nil 0 1 1 2] nil nil] [nil 5 3 6 0 0 0 2 4] [nil nil [nil 45 1073741385 0
3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2] [nil 22 1073741385 0 2] [nil
30 1073741312 0 2] nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 6 2])
I am here!!!
I am here!!!
I am here!!!
I am here!!!
f4: After initialize
(Pairset:  [nil [nil nil nil nil nil nil nil nil nil] 0])
(Matrix:  [nil [nil] [nil] [nil] [nil] 0 0 0 0 0 0 0 0 [nil] [nil]])
(UpdapteHT:  [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0
0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8
1 2])
(BEFORE 0 [nil nil nil nil nil nil nil nil nil])
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 2 2 3] nil nil nil nil nil nil nil])
After first update
(Pairset:  [nil [nil [nil 1 2 2 3] nil nil nil nil nil nil nil] 1])
(Basis:  [nil [nil [nil 4 5 6] [nil 2 3] nil nil] [nil [nil (1 . 1) (1 . 1) (1 .
1)] [nil (1 . 1) (-1 . 1)] nil nil] 4 2 2 [nil 0 0 0 0] [nil 1 2 nil nil] [nil
1073741385 1073741385 nil nil] 2])
(HT:  [nil [nil [nil 1 1 1 3] [nil 1 1 1 3] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0
1 2] [nil 0 1 1 2] [nil 1 1 1 3] nil] [nil 5 3 6 0 0 0 2 4] [nil nil [nil 45
1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2] [nil 22
1073741385 0 2] [nil 30 1073741312 0 2] nil nil] [nil 13 21 5 2] 3 4 revgradlex
[nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3
10 8 6 2])
(plcm: [nil 2 0 nil])
(f4: iteration:  1)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 2 2 3] nil nil nil nil nil nil nil] , npairs:
1)
(sort_pairset_by_lcm: before (([nil 1 2 2 3] [nil 1 1 1 3])))
(sort_pairset_by_lcm: after (([nil 1 2 2 3] [nil 1 1 1 3])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 2) 2)
(sort_generators_by_position: after sort:  (1 2) 2)
(f4_select_normal: after sorting S-polys [nil 1 2] 2)
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  7)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  7 ; h =  45)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  7 ; h =  29)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  7 ; h =  37)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 2 3] [nil 1 1 1 3
] [nil 1 0 2 3] [nil 0 1 2 3] nil nil nil nil] [nil 4 0 0 0 0 0 2 3] [nil nil [
nil 45 1073741385 2 3] [nil 29 1073741385 0 3] [nil 37 1073741312 0 3] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 2 3] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 2 3] [nil 1 1 1 3] [nil 1 0 2 3] [nil 0 1 2 3] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil
nil [nil 45 1073741385 2 3] [nil 29 1073741385 0 3] [nil 37 1073741312 0 3] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 1 1 1 3] WITH HASH h = htmp + hash(e))
(hash(e) =  45)
(htmp =  0 ; h =  45)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  0 ; h =  0)
(f4: after select:  [nil [nil [nil 1 2 2 3] nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 5]] [nil] [nil] 2 0 2 1 1 1
0 0 [nil 1 nil] [nil 2 nil]])
(f4: symbol_ht: [nil [nil [nil 0 0 0 0] [nil 1 1 1 3] [nil 1 0 2 3] [nil 0 1 2 3
] [nil 0 0 0 0] nil nil nil nil nil nil nil nil nil nil nil] [nil 0 5 0 0 0 0 4
0 0 0 0 0 0 0 2 3] [nil nil [nil 45 1073741385 2 3] [nil 29 1073741385 0 3] [nil
37 1073741312 0 3] [nil 0 1073741312 0 0] nil nil nil nil nil nil nil nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 5 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 1 1 3] nil] [
nil 5 3 6 0 0 0 2 4] [nil nil [nil 45 1073741385 0 3] [nil 0 1073741312 0 0] [
nil 38 1073741385 0 2] [nil 22 1073741385 0 2] [nil 30 1073741312 0 2] nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 6 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3]
[nil 1 0 2 3] [nil 0 1 2 3] [nil 0 0 0 0] nil nil nil nil nil nil nil nil nil
nil nil] [nil 0 5 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil nil [nil 45 1073741385 2 3]
[nil 29 1073741385 0 3] [nil 37 1073741312 0 3] [nil 0 1073741312 0 0] nil nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 5 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3]
[nil 1 0 2 3] [nil 0 1 2 3] [nil 0 0 0 0] nil nil nil nil nil nil nil nil nil
nil nil] [nil 0 5 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil nil [nil 45 1073741385 2 3]
[nil 29 1073741385 1 3] [nil 37 1073741312 1 3] [nil 0 1073741312 1 0] nil nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 5 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 5]] [nil] [nil]
2 0 2 4 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 0 0 0] [nil 1 1 1 3] [nil 1 0 2
3] [nil 0 1 2 3] [nil 0 0 0 0] nil nil nil nil nil nil nil nil nil nil nil] [nil
0 5 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil nil [nil 45 1073741385 2 3] [nil 29
1073741385 1 3] [nil 37 1073741312 1 3] [nil 0 1073741312 1 0] nil nil nil nil
nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 5 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 5]] [nil]
[nil] 2 0 2 4 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3] [nil
1 0 2 3] [nil 0 1 2 3] [nil 0 0 0 0] nil nil nil nil nil nil nil nil nil nil nil
] [nil 0 5 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil nil [nil 45 1073741385 2 3] [nil 29
1073741385 1 3] [nil 37 1073741312 1 3] [nil 0 1073741312 1 0] nil nil nil nil
nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 5 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4 5])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2 3]] [nil
[nil 1 4]] [nil 2 3 4 5] [nil] 2 0 2 4 1 1 1 3 [nil 1 nil nil nil nil nil nil
nil] [nil 2 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 0 0 0] [
nil 1 1 1 3] [nil 1 0 2 3] [nil 0 1 2 3] [nil 0 0 0 0] nil nil nil nil nil nil
nil nil nil nil nil] [nil 0 5 0 0 0 0 4 0 0 0 0 0 0 0 2 3] [nil nil [nil 45
1073741385 1 3] [nil 29 1073741385 2 3] [nil 37 1073741312 3 3] [nil 0
1073741312 4 0] nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 5 2])
(f4_reduction: after sorting [nil [nil [nil 1 2 3]] [nil [nil 1 4]] [nil 2 3 4 5
] [nil] 2 0 2 4 1 1 1 3 [nil 1 nil nil nil nil nil nil nil] [nil 2 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2 3]] [nil [nil 1 4]] [
nil 2 3 4 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 2 0 2 4 1 1 1 3 [nil 1 nil nil
nil nil nil nil nil] [nil 2 1 nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2 3] [nil 2 3 4] nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2 3]] [nil [nil 2 3 4]] [
nil 2 3 4 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 1 1 1 4 1 1 1 3 [nil 1 nil nil
nil nil nil nil nil] [nil 2 1 nil nil]])
I am here!!!
(f4: after reduction, matrix:  [nil [nil [nil 1 2 3]] [nil [nil 7 8 3]] [nil 2 3
4 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 1 1 1 4 1 1 1 3 [nil 1 nil nil nil nil
nil nil nil] [nil 2 1 nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] nil] [
nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1
. 1)] nil] 4 2 3 [nil 0 0 0 0] [nil 1 2 nil nil] [nil 1073741385 1073741385 nil
nil] 2])
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 3 3 4] [nil 2 3 3 4] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 1 3 9 4] [nil 2 3 3 4] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] nil] [nil [nil (
1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil
] 4 3 3 [nil 0 0 0 0] [nil 1 2 3 nil] [nil 1073741385 1073741385 1073741385 nil]
3])
I am here!!!
I am here!!!
(f4: iteration:  2)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 3 9 4] [nil 2 3 3 4] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 3 9 4] [nil 1 1 2 4])))
(sort_pairset_by_lcm: after (([nil 1 3 9 4] [nil 1 1 2 4])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 3) 2)
(sort_generators_by_position: after sort:  (1 3) 2)
(f4_select_normal: after sorting S-polys [nil 1 3] 2)
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 0 2 2] TO SYM HASHTABLE:)
(hash(etmp) =  14)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  14 ; h =  52)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  14 ; h =  36)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  14 ; h =  44)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 3 4] [nil 1 1 2 4
] [nil 1 0 3 4] [nil 0 1 3 4] nil nil nil nil] [nil 0 0 0 0 0 2 3 4] [nil nil [
nil 52 1073741385 2 4] [nil 36 1073741385 0 4] [nil 44 1073741312 0 4] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 7 8 3] MULTIPLIED BY [nil 0 1 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  23)
[nil [nil [nil 0 1 3 4] [nil 1 1 2 4] [nil 1 0 3 4] [nil 0 1 3 4] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 2 3 0 0 0 0 0 0 4 0 0] [nil
nil [nil 52 1073741385 2 4] [nil 36 1073741385 0 4] [nil 44 1073741312 0 4] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 1 0 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  29)
(htmp =  23 ; h =  52)
(MONOMIAL [nil 0 1 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  23 ; h =  60)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  23 ; h =  23)
(f4: after select:  [nil [nil [nil 1 3 9 4] [nil 2 3 3 4] nil nil nil nil nil
nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 5 6]] [nil] [nil] 2 0 2 1 1
1 0 0 [nil 1 nil] [nil 3 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 0 1] [nil 1 1 2 4] [nil 1 0 3 4] [nil 0 1 3 4
] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil nil nil nil nil nil nil nil] [nil 0 0
0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil 52 1073741385 2 4] [nil 36 1073741385
0 4] [nil 44 1073741312 0 4] [nil 60 1073741312 0 4] [nil 23 1073741312 0 1] nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 1 0 1] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] nil nil nil nil nil nil nil] [nil 7 3 0 0 0 9 8 4 5 0 0 0 0 0
2 6] [nil nil [nil 45 1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385
0 2] [nil 22 1073741385 0 2] [nil 30 1073741312 0 2] [nil 29 1073741385 2 3] [
nil 37 1073741312 3 3] [nil 52 1073741385 0 4] nil nil nil nil nil nil nil] [nil
13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0] [nil 1 2 3] 3 10 16 9 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 0 1] [nil 1 1 2 4]
[nil 1 0 3 4] [nil 0 1 3 4] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil 52
1073741385 2 4] [nil 36 1073741385 0 4] [nil 44 1073741312 0 4] [nil 60
1073741312 0 4] [nil 23 1073741312 0 1] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 1 0 1] [nil 1 1 2 4]
[nil 1 0 3 4] [nil 0 1 3 4] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil 52
1073741385 2 4] [nil 36 1073741385 1 4] [nil 44 1073741312 1 4] [nil 60
1073741312 1 4] [nil 23 1073741312 1 1] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 5 6]] [nil] [nil
] 2 0 2 5 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 1 0 1] [nil 1 1 2 4] [nil 1 0 3
4] [nil 0 1 3 4] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil nil nil nil nil nil nil
nil] [nil 0 0 0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil 52 1073741385 2 4] [nil
36 1073741385 1 4] [nil 44 1073741312 1 4] [nil 60 1073741312 1 4] [nil 23
1073741312 1 1] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 5 6]] [nil
] [nil] 2 0 2 5 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 1 0 1] [nil 1 1 2 4] [nil
1 0 3 4] [nil 0 1 3 4] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil nil nil nil nil
nil nil nil] [nil 0 0 0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil 52 1073741385 2
4] [nil 36 1073741385 1 4] [nil 44 1073741312 1 4] [nil 60 1073741312 1 4] [nil
23 1073741312 1 1] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: sorted by hash [nil 2 5 3 4 6])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3 4]] [nil
[nil 1 2 5]] [nil 2 5 3 4 6] [nil] 2 0 2 5 1 1 1 4 [nil 1 nil nil nil nil nil
nil nil] [nil 3 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 1 0 1] [
nil 1 1 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 2 2 4] [nil 0 1 0 1] nil nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 0 2 3 0 6 0 0 0 0 4 5 0] [nil nil [nil
52 1073741385 1 4] [nil 36 1073741385 3 4] [nil 44 1073741312 4 4] [nil 60
1073741312 2 4] [nil 23 1073741312 5 1] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_reduction: after sorting [nil [nil [nil 1 3 4]] [nil [nil 1 2 5]] [nil 2 5 3
4 6] [nil] 2 0 2 5 1 1 1 4 [nil 1 nil nil nil nil nil nil nil] [nil 3 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3 4]] [nil [nil 1 2 5]]
[nil 2 5 3 4 6] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)]] 2 0 2 5 1 1 1 4 [
nil 1 nil nil nil nil nil nil nil] [nil 3 1 nil nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3 4] [nil 2 3 4 5] nil nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3 4]] [nil [nil 2 3 4 5]] [
nil 2 5 3 4 6] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)]] 1 1 1 5 1 1 1 4 [
nil 1 nil nil nil nil nil nil nil] [nil 3 1 nil nil nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 3 4]] [nil [nil 10 11 12 13]] [
nil 2 5 3 4 6] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)]] 1 1 1 5 1 1 1 4 [
nil 1 nil nil nil nil nil nil nil] [nil 3 1 nil nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (
-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)]
nil nil nil nil] 8 3 4 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 nil nil nil nil nil] [
nil 1073741385 1073741385 1073741385 nil nil nil nil nil] 3])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 4 4 5] [nil 2 4 4 5] [nil 3 4 4 5] nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil])
I am here!!!
(f4: after update:  [nil [nil [nil 1 4 14 5] [nil 2 4 4 5] [nil 3 4 4 5] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] nil nil nil
nil] 8 4 4 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 4 nil nil nil nil] [nil 1073741385
1073741385 1073741385 1073741312 nil nil nil nil] 4])
I am here!!!
I am here!!!
(f4: iteration:  3)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 4 14 5] [nil 2 4 4 5] [nil 3 4 4 5] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 4 14 5] [nil 1 2 2 5])))
(sort_pairset_by_lcm: after (([nil 1 4 14 5] [nil 1 2 2 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 4) 2)
(sort_generators_by_position: after sort:  (1 4) 2)
(f4_select_normal: after sorting S-polys [nil 1 4] 2)
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 1 2 3] TO SYM HASHTABLE:)
(hash(etmp) =  37)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  37 ; h =  75)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  37 ; h =  59)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  37 ; h =  67)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 2 3 5] [nil 1 2 2 5
] [nil 1 1 3 5] [nil 0 2 3 5] nil nil nil nil] [nil 0 0 0 0 2 3 4 0] [nil nil [
nil 75 1073741385 2 5] [nil 59 1073741385 0 5] [nil 67 1073741312 0 5] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 10 11 12 13] MULTIPLIED BY [nil 1 0 0 1] TO SYM HASHTABLE:)
(hash(etmp) =  15)
[nil [nil [nil 0 2 3 5] [nil 1 2 2 5] [nil 1 1 3 5] [nil 0 2 3 5] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 4 0 0 0 0 0 0 0 2 3 0 0] [nil
nil [nil 75 1073741385 2 5] [nil 59 1073741385 0 5] [nil 67 1073741312 0 5] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 0 2 2 4] WITH HASH h = htmp + hash(e))
(hash(e) =  60)
(htmp =  15 ; h =  75)
(MONOMIAL [nil 1 0 3 4] WITH HASH h = htmp + hash(e))
(hash(e) =  36)
(htmp =  15 ; h =  51)
(MONOMIAL [nil 0 1 3 4] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  15 ; h =  59)
(MONOMIAL [nil 0 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  23)
(htmp =  15 ; h =  38)
(f4: after select:  [nil [nil [nil 1 4 14 5] [nil 2 4 4 5] [nil 3 4 4 5] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 5 3 6]] [nil] [nil] 2 0 2 1
1 1 0 0 [nil 1 nil] [nil 4 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1 0 2] [nil 1 2 2 5] [nil 1 1 3 5] [nil 0 2 3 5
] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil nil nil nil] [nil 0 0
0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil 75 1073741385 2 5] [nil 59 1073741385
0 5] [nil 67 1073741312 0 5] [nil 51 1073741531 0 5] [nil 38 1073741385 0 2] nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 1 0 0 1] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 1 0 1] [nil
1 2 2 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
] [nil 0 3 0 0 0 11 8 4 0 0 0 0 14 12 2 0 0 0 0 0 0 9 0 5 13 0 0 0 0 10 7 6] [
nil nil [nil 45 1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2] [
nil 22 1073741385 0 2] [nil 30 1073741312 0 2] [nil 29 1073741385 2 3] [nil 37
1073741312 3 3] [nil 52 1073741385 0 4] [nil 60 1073741312 2 4] [nil 36
1073741385 3 4] [nil 44 1073741312 4 4] [nil 23 1073741312 5 1] [nil 75
1073741385 0 5] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 32 14 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1 0 2] [nil 1 2 2 5]
[nil 1 1 3 5] [nil 0 2 3 5] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil 75
1073741385 2 5] [nil 59 1073741385 0 5] [nil 67 1073741312 0 5] [nil 51
1073741531 0 5] [nil 38 1073741385 0 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1 0 2] [nil 1 2 2 5]
[nil 1 1 3 5] [nil 0 2 3 5] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil 75
1073741385 2 5] [nil 59 1073741385 1 5] [nil 67 1073741312 1 5] [nil 51
1073741531 1 5] [nil 38 1073741385 1 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 5 3 6]] [nil] [
nil] 2 0 2 5 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 4 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1 0 2] [nil 1 2 2 5] [nil 1 1 3
5] [nil 0 2 3 5] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil nil nil
nil] [nil 0 0 0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil 75 1073741385 2 5] [nil
59 1073741385 1 5] [nil 67 1073741312 1 5] [nil 51 1073741531 1 5] [nil 38
1073741385 1 2] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 5 3 6]] [
nil] [nil] 2 0 2 5 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 4 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1 0 2] [nil 1 2 2 5] [nil
1 1 3 5] [nil 0 2 3 5] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil
nil nil nil] [nil 0 0 0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil 75 1073741385 2
5] [nil 59 1073741385 1 5] [nil 67 1073741312 1 5] [nil 51 1073741531 1 5] [nil
38 1073741385 1 2] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: sorted by hash [nil 2 5 3 4 6])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3 4]] [nil
[nil 1 2 3 5]] [nil 2 5 3 4 6] [nil] 2 0 2 5 1 1 1 4 [nil 1 nil nil nil nil nil
nil nil] [nil 4 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1 0 2] [
nil 1 2 2 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 2 0 3 5] [nil 1 1 0 2] nil nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 4 5 0 6 0 0 0 0 2 3 0 0] [nil nil [nil
75 1073741385 1 5] [nil 59 1073741385 3 5] [nil 67 1073741312 4 5] [nil 51
1073741531 2 5] [nil 38 1073741385 5 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_reduction: after sorting [nil [nil [nil 1 3 4]] [nil [nil 1 2 3 5]] [nil 2 5
3 4 6] [nil] 2 0 2 5 1 1 1 4 [nil 1 nil nil nil nil nil nil nil] [nil 4 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3 4]] [nil [nil 1 2 3 5
]] [nil 2 5 3 4 6] [nil [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)]] 2 0 2 5 1 1 1 4
[nil 1 nil nil nil nil nil nil nil] [nil 4 1 nil nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3 4] [nil 2 3 4 5] nil nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3 4]] [nil [nil 2 3 4 5]] [
nil 2 5 3 4 6] [nil [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)]] 1 1 1 5 1 1 1 4 [nil
1 nil nil nil nil nil nil nil] [nil 4 1 nil nil nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 3 4]] [nil [nil 15 16 17 4]] [
nil 2 5 3 4 6] [nil [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)]] 1 1 1 5 1 1 1 4 [nil
1 nil nil nil nil nil nil nil] [nil 4 1 nil nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [
nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 .
1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] nil nil nil] 8 4 5 [nil 0 0 0
0 0 0 0 0] [nil 1 2 3 4 nil nil nil nil] [nil 1073741385 1073741385 1073741385
1073741312 nil nil nil nil] 4])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 5 5 6] [nil 2 5 5 6] [nil 3 5 6 5] [nil 4 5 7 7] nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 3 5 15 5] [nil 1 5 5 6] [nil 2 5 5 6] [nil 4
5 7 7] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] [nil 15 16 17 4] nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1)
(-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)]
[nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] nil nil nil] 8 5 5 [nil 0 0 0 0 0 0 0 0]
[nil 1 2 3 4 5 nil nil nil] [nil 1073741385 1073741385 1073741385 1073741312
1073741531 nil nil nil] 5])
I am here!!!
I am here!!!
(f4: iteration:  4)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 3 5 15 5] [nil 1 5 5 6] [nil 2 5 5 6] [nil 4 5 7
7] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 3 5 15 5] [nil 2 0 3 5])))
(sort_pairset_by_lcm: after (([nil 3 5 15 5] [nil 2 0 3 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (3 5) 2)
(sort_generators_by_position: after sort:  (3 5) 2)
(f4_select_normal: after sorting S-polys [nil 3 5] 2)
(INSERTING [nil 7 8 3] MULTIPLIED BY [nil 1 0 1 2] TO SYM HASHTABLE:)
(hash(etmp) =  22)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 0 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  29)
(htmp =  22 ; h =  51)
(MONOMIAL [nil 0 1 2 3] WITH HASH h = htmp + hash(e))
(hash(e) =  37)
(htmp =  22 ; h =  59)
(MONOMIAL [nil 0 0 0 0] WITH HASH h = htmp + hash(e))
(hash(e) =  0)
(htmp =  22 ; h =  22)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 3 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 1 0 1 2] [nil 2 0 3 5
] [nil 1 1 3 5] [nil 1 0 1 2] nil nil nil nil] [nil 0 0 0 0 2 3 0 4] [nil nil [
nil 51 1073741531 2 5] [nil 59 1073741385 0 5] [nil 22 1073741385 0 2] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 15 16 17 4] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 1 0 1 2] [nil 2 0 3 5] [nil 1 1 3 5] [nil 1 0 1 2] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 2 0 0 4 0 0 0 0 3 0 0 0] [nil
nil [nil 51 1073741531 2 5] [nil 59 1073741385 0 5] [nil 22 1073741385 0 2] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 2 0 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  0 ; h =  51)
(MONOMIAL [nil 1 1 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  59)
(htmp =  0 ; h =  59)
(MONOMIAL [nil 0 2 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  67)
(htmp =  0 ; h =  67)
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  0 ; h =  38)
(f4: after select:  [nil [nil [nil 3 5 15 5] [nil 1 5 5 6] [nil 2 5 5 6] [nil 4
5 7 7] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 3 5 6]] [nil] [nil] 2 0 2 1
1 1 0 0 [nil 3 nil] [nil 5 nil]])
(f4: symbol_ht: [nil [nil [nil 1 1 0 2] [nil 2 0 3 5] [nil 1 1 3 5] [nil 1 0 1 2
] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil nil nil nil] [nil 0 0
0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil 51 1073741531 2 5] [nil 59 1073741385
0 5] [nil 22 1073741385 0 2] [nil 67 1073741312 0 5] [nil 38 1073741385 0 2] nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 1 0 1] [nil
1 2 2 5] [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 2 0 3 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil nil] [nil 0 3 0 0 17 11 8 4 0 0 0 0 14 12 2
0 0 0 0 0 15 9 0 5 13 0 0 0 16 10 7 6] [nil nil [nil 45 1073741385 0 3] [nil 0
1073741312 0 0] [nil 38 1073741385 0 2] [nil 22 1073741385 0 2] [nil 30
1073741312 0 2] [nil 29 1073741385 2 3] [nil 37 1073741312 3 3] [nil 52
1073741385 0 4] [nil 60 1073741312 2 4] [nil 36 1073741385 3 4] [nil 44
1073741312 4 4] [nil 23 1073741312 5 1] [nil 75 1073741385 0 5] [nil 51
1073741531 2 5] [nil 59 1073741385 3 5] [nil 67 1073741312 4 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 32
17 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 1 0 2] [nil 2 0 3 5]
[nil 1 1 3 5] [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil 51
1073741531 2 5] [nil 59 1073741385 0 5] [nil 22 1073741385 0 2] [nil 67
1073741312 0 5] [nil 38 1073741385 0 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 1 0 2] [nil 2 0 3 5]
[nil 1 1 3 5] [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil 51
1073741531 2 5] [nil 59 1073741385 1 5] [nil 22 1073741385 1 2] [nil 67
1073741312 1 5] [nil 38 1073741385 1 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 3 5 6]] [nil] [
nil] 2 0 2 5 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 5 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 1 0 2] [nil 2 0 3 5] [nil 1 1 3
5] [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil nil nil
nil] [nil 0 0 0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil 51 1073741531 2 5] [nil
59 1073741385 1 5] [nil 22 1073741385 1 2] [nil 67 1073741312 1 5] [nil 38
1073741385 1 2] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 3 5 6]] [
nil] [nil] 2 0 2 5 1 1 0 0 [nil 3 nil nil nil nil nil nil nil] [nil 5 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 1 0 2] [nil 2 0 3 5] [nil
1 1 3 5] [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil nil nil nil nil
nil nil nil] [nil 0 0 0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil 51 1073741531 2
5] [nil 59 1073741385 1 5] [nil 22 1073741385 1 2] [nil 67 1073741312 1 5] [nil
38 1073741385 1 2] nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4
revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 16 6 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 5 6 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2 5]] [nil
[nil 1 2 3 4]] [nil 2 3 5 6 4] [nil] 2 0 2 5 1 1 1 4 [nil 3 nil nil nil nil nil
nil nil] [nil 5 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 1 0 2] [
nil 2 0 3 5] [nil 1 1 3 5] [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 1 0 2] nil nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 2 5 0 4 6 0 0 0 3 0 0 0] [nil nil [nil
51 1073741531 1 5] [nil 59 1073741385 2 5] [nil 22 1073741385 5 2] [nil 67
1073741312 3 5] [nil 38 1073741385 4 2] nil nil nil nil nil nil nil nil nil nil]
[nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 6 2])
(f4_reduction: after sorting [nil [nil [nil 1 2 5]] [nil [nil 1 2 3 4]] [nil 2 3
5 6 4] [nil] 2 0 2 5 1 1 1 4 [nil 3 nil nil nil nil nil nil nil] [nil 5 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2 5]] [nil [nil 1 2 3 4
]] [nil 2 3 5 6 4] [nil [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)]] 2 0 2 5 1 1 1 4
[nil 3 nil nil nil nil nil nil nil] [nil 5 1 nil nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2 5] [nil 2 3 4 5] nil nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2 5]] [nil [nil 2 3 4 5]] [
nil 2 3 5 6 4] [nil [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)]] 1 1 1 5 1 1 1 4 [
nil 3 nil nil nil nil nil nil nil] [nil 5 1 nil nil nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2 5]] [nil [nil 16 17 4 5]] [nil
2 3 5 6 4] [nil [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)]] 1 1 1 5 1 1 1 4 [nil 3
nil nil nil nil nil nil nil] [nil 5 1 nil nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] [nil 16 17 4 5] nil nil] [nil [nil (1 . 1) (1 . 1)
(1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 .
1) (-1 . 1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1)
(-1 . 1) (-1 . 1)] nil nil] 8 5 6 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 4 5 nil nil
nil] [nil 1073741385 1073741385 1073741385 1073741312 1073741531 nil nil nil] 5]
)
I am here!!!
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 6 8 5] [nil 2 6 8 5] [nil 3 6 8 5] [nil 4 6 9 6] [nil 5 6
5 6] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]
)
(f4: after update:  [nil [nil [nil 1 6 16 5] [nil 2 6 8 5] [nil 3 6 8 5] [nil 4
6 9 6] [nil 5 6 5 6] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] [nil 15 16 17 4] [nil 16 17 4 5] nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [
nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 .
1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1)
(-1 . 1)] nil nil] 8 6 6 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 4 5 6 nil nil] [nil
1073741385 1073741385 1073741385 1073741312 1073741531 1073741385 nil nil] 6])
I am here!!!
I am here!!!
(f4: iteration:  5)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 6 16 5] [nil 2 6 8 5] [nil 3 6 8 5] [nil 4 6 9
6] [nil 5 6 5 6] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 6 16 5] [nil 1 1 3 5])))
(sort_pairset_by_lcm: after (([nil 1 6 16 5] [nil 1 1 3 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 6) 2)
(sort_generators_by_position: after sort:  (1 6) 2)
(f4_select_normal: after sorting S-polys [nil 1 6] 2)
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 0 3 3] TO SYM HASHTABLE:)
(hash(etmp) =  21)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  21 ; h =  59)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  21 ; h =  43)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  21 ; h =  51)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 4 5] [nil 1 1 3 5
] [nil 1 0 4 5] [nil 0 1 4 5] nil nil nil nil] [nil 0 0 0 0 2 3 4 0] [nil nil [
nil 59 1073741385 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0 5] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 16 17 4 5] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 4 5] [nil 1 1 3 5] [nil 1 0 4 5] [nil 0 1 4 5] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 4 0 0 0 0 0 0 0 2 3 0 0] [nil
nil [nil 59 1073741385 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0 5] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 1 1 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  59)
(htmp =  0 ; h =  59)
(MONOMIAL [nil 0 2 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  67)
(htmp =  0 ; h =  67)
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  0 ; h =  38)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  0 ; h =  22)
(f4: after select:  [nil [nil [nil 1 6 16 5] [nil 2 6 8 5] [nil 3 6 8 5] [nil 4
6 9 6] [nil 5 6 5 6] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 5 6 7]] [nil] [nil] 2 0 2 1
1 1 0 0 [nil 1 nil] [nil 6 nil]])
(f4: symbol_ht: [nil [nil [nil 1 0 1 2] [nil 1 1 3 5] [nil 1 0 4 5] [nil 0 1 4 5
] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil nil nil nil nil nil]
[nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [nil nil [nil 59 1073741385 2 5] [nil 43
1073741385 0 5] [nil 51 1073741312 0 5] [nil 67 1073741312 0 5] [nil 38
1073741385 0 2] [nil 22 1073741385 0 2] nil nil nil nil nil nil nil nil nil] [
nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 1 0 1] [nil
1 2 2 5] [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 1 1 3 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil nil] [nil 0 3 0 0 17 11 8 4 0 0 0 0 14 12 2
0 0 0 0 0 15 9 0 5 13 0 0 0 16 10 7 6] [nil nil [nil 45 1073741385 0 3] [nil 0
1073741312 0 0] [nil 38 1073741385 0 2] [nil 22 1073741385 0 2] [nil 30
1073741312 0 2] [nil 29 1073741385 2 3] [nil 37 1073741312 3 3] [nil 52
1073741385 0 4] [nil 60 1073741312 2 4] [nil 36 1073741385 3 4] [nil 44
1073741312 4 4] [nil 23 1073741312 5 1] [nil 75 1073741385 0 5] [nil 51
1073741531 2 5] [nil 59 1073741385 3 5] [nil 67 1073741312 4 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 32
17 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 0 1 2] [nil 1 1 3 5]
[nil 1 0 4 5] [nil 0 1 4 5] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1 2] nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [nil nil [nil
59 1073741385 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0 5] [nil 67
1073741312 0 5] [nil 38 1073741385 0 2] [nil 22 1073741385 0 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 0 1 2] [nil 1 1 3 5]
[nil 1 0 4 5] [nil 0 1 4 5] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1 2] nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [nil nil [nil
59 1073741385 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 67
1073741312 1 5] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 5 6 7]] [nil] [
nil] 2 0 2 6 1 1 0 0 [nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 6 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 0 1 2] [nil 1 1 3 5] [nil 1 0 4
5] [nil 0 1 4 5] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [nil nil [nil 59
1073741385 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 67
1073741312 1 5] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 5 6 7]] [
nil] [nil] 2 0 2 6 1 1 0 0 [nil 1 nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil] [nil 6 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1 2] [nil 1 1 3 5] [nil
1 0 4 5] [nil 0 1 4 5] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil
nil nil nil nil nil] [nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [nil nil [nil 59
1073741385 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 67
1073741312 1 5] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(convert_hashes_to_columns: sorted by hash [nil 2 5 3 4 6 7])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 3 4]] [nil
[nil 1 2 5 6]] [nil 2 5 3 4 6 7] [nil] 2 0 2 6 1 1 1 5 [nil 1 nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 6 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1 2] [
nil 1 1 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [nil 0 2 3 5] [nil 1 1 0 2] [nil 1 0 1
2] nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 4 5 0 6 7 0 0 0 2 3 0 0] [
nil nil [nil 59 1073741385 1 5] [nil 43 1073741385 3 5] [nil 51 1073741312 4 5]
[nil 67 1073741312 2 5] [nil 38 1073741385 5 2] [nil 22 1073741385 6 2] nil nil
nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_reduction: after sorting [nil [nil [nil 1 3 4]] [nil [nil 1 2 5 6]] [nil 2 5
3 4 6 7] [nil] 2 0 2 6 1 1 1 5 [nil 1 nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil] [nil 6 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 3 4]] [nil [nil 1 2 5 6
]] [nil 2 5 3 4 6 7] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)]] 2 0
2 6 1 1 1 5 [nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]
[nil 6 1 nil nil nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 3 4] [nil 2 3 4 5 6] nil nil nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 3 4]] [nil [nil 2 3 4 5 6]]
[nil 2 5 3 4 6 7] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)]] 1 1 1
6 1 1 1 5 [nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 6 1 nil nil nil nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 3 4]] [nil [nil 17 18 19 4 5]] [
nil 2 5 3 4 6 7] [nil [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)]] 1 1 1 6
1 1 1 5 [nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] [nil
6 1 nil nil nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] nil] [nil [nil
(1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [
nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (
-1 . 1)] nil] 8 6 7 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 4 5 6 nil nil] [nil
1073741385 1073741385 1073741385 1073741312 1073741531 1073741385 nil nil] 6])
I am here!!!
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 7 9 6] [nil 2 7 9 6] [nil 3 7 9 6] [nil 4 7 10 5] [nil 5 7
7 7] [nil 6 7 9 6] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 4 7 17 5] [nil 1 7 9 6] [nil 2 7 9 6] [nil 3
7 9 6] [nil 6 7 9 6] [nil 5 7 7 7] nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] nil] [nil [nil (1 . 1) (1
. 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1)
(-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (
1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] nil]
8 7 7 [nil 0 0 0 0 0 0 0 0] [nil 1 2 3 4 5 6 7 nil] [nil 1073741385 1073741385
1073741385 1073741312 1073741531 1073741385 1073741312 nil] 7])
I am here!!!
I am here!!!
(f4: iteration:  6)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 4 7 17 5] [nil 1 7 9 6] [nil 2 7 9 6] [nil 3 7 9
6] [nil 6 7 9 6] [nil 5 7 7 7] nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 4 7 17 5] [nil 0 2 3 5])))
(sort_pairset_by_lcm: after (([nil 4 7 17 5] [nil 0 2 3 5])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (4 7) 2)
(sort_generators_by_position: after sort:  (4 7) 2)
(f4_select_normal: after sorting S-polys [nil 4 7] 2)
(INSERTING [nil 10 11 12 13] MULTIPLIED BY [nil 0 0 1 1] TO SYM HASHTABLE:)
(hash(etmp) =  7)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 0 2 2 4] WITH HASH h = htmp + hash(e))
(hash(e) =  60)
(htmp =  7 ; h =  67)
(MONOMIAL [nil 1 0 3 4] WITH HASH h = htmp + hash(e))
(hash(e) =  36)
(htmp =  7 ; h =  43)
(MONOMIAL [nil 0 1 3 4] WITH HASH h = htmp + hash(e))
(hash(e) =  44)
(htmp =  7 ; h =  51)
(MONOMIAL [nil 0 1 0 1] WITH HASH h = htmp + hash(e))
(hash(e) =  23)
(htmp =  7 ; h =  30)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4 5] nil] [nil nil
nil] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 4 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 1 2] [nil 0 2 3 5
] [nil 1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2] nil nil nil] [nil 0 0 0 0 2 3 4 5] [
nil nil [nil 67 1073741312 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0 5]
[nil 30 1073741312 0 2] nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 5 2])
I am here!!!
(INSERTING [nil 17 18 19 4 5] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 1 2] [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2]
nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 2 4 0 0 0 0 0 0 3 0 0
5] [nil nil [nil 67 1073741312 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0
5] [nil 30 1073741312 0 2] nil nil nil nil nil nil nil nil nil nil nil] [nil 13
21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2 3] 3 10 16 5 2]
(MONOMIAL [nil 0 2 3 5] WITH HASH h = htmp + hash(e))
(hash(e) =  67)
(htmp =  0 ; h =  67)
(MONOMIAL [nil 1 0 4 5] WITH HASH h = htmp + hash(e))
(hash(e) =  43)
(htmp =  0 ; h =  43)
(MONOMIAL [nil 0 1 4 5] WITH HASH h = htmp + hash(e))
(hash(e) =  51)
(htmp =  0 ; h =  51)
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  0 ; h =  38)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  0 ; h =  22)
(f4: after select:  [nil [nil [nil 4 7 17 5] [nil 1 7 9 6] [nil 2 7 9 6] [nil 3
7 9 6] [nil 6 7 9 6] [nil 5 7 7 7] nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4 5] nil] [nil [nil 2 3 4 6 7]] [nil] [nil] 2 0
2 1 1 1 0 0 [nil 4 nil] [nil 7 nil]])
(f4: symbol_ht: [nil [nil [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5
] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil nil nil nil nil nil]
[nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [nil nil [nil 67 1073741312 2 5] [nil 43
1073741385 0 5] [nil 51 1073741312 0 5] [nil 30 1073741312 0 2] [nil 38
1073741385 0 2] [nil 22 1073741385 0 2] nil nil nil nil nil nil nil nil nil] [
nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 1 0 1] [nil
1 2 2 5] [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [
nil 0 2 3 5] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 3 0 0 17 11
8 4 0 0 0 0 14 12 2 18 0 0 0 0 15 9 19 5 13 0 0 0 16 10 7 6] [nil nil [nil 45
1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2] [nil 22
1073741385 0 2] [nil 30 1073741312 0 2] [nil 29 1073741385 2 3] [nil 37
1073741312 3 3] [nil 52 1073741385 0 4] [nil 60 1073741312 2 4] [nil 36
1073741385 3 4] [nil 44 1073741312 4 4] [nil 23 1073741312 5 1] [nil 75
1073741385 0 5] [nil 51 1073741531 2 5] [nil 59 1073741385 3 5] [nil 67
1073741312 4 5] [nil 43 1073741385 3 5] [nil 51 1073741312 4 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 32 19 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 1 0 1 2] [nil 0 2 3 5]
[nil 1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [nil nil [nil
67 1073741312 2 5] [nil 43 1073741385 0 5] [nil 51 1073741312 0 5] [nil 30
1073741312 0 2] [nil 38 1073741385 0 2] [nil 22 1073741385 0 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 1 0 1 2] [nil 0 2 3 5]
[nil 1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] nil nil
nil nil nil nil nil nil nil] [nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [nil nil [nil
67 1073741312 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 30
1073741312 1 2] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4 5]] [nil [nil 2 3 4 6 7]] [nil
] [nil] 2 0 2 6 1 1 0 0 [nil 4 nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil] [nil 7 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 1 0 1 2] [nil 0 2 3 5] [nil 1 0 4
5] [nil 0 1 4 5] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil nil
nil nil nil nil] [nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [nil nil [nil 67
1073741312 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 30
1073741312 1 2] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4 5]] [nil [nil 2 3 4 6 7]
] [nil] [nil] 2 0 2 6 1 1 0 0 [nil 4 nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil] [nil 7 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 1 0 1 2] [nil 0 2 3 5] [nil
1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] nil nil nil nil
nil nil nil nil nil] [nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [nil nil [nil 67
1073741312 2 5] [nil 43 1073741385 1 5] [nil 51 1073741312 1 5] [nil 30
1073741312 1 2] [nil 38 1073741385 1 2] [nil 22 1073741385 1 2] nil nil nil nil
nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4 6 7 5])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2 3 6]] [
nil [nil 1 2 3 4 5]] [nil 2 3 4 6 7 5] [nil] 2 0 2 6 1 1 1 5 [nil 4 nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil] [nil 7 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 1 0 1 2] [
nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1
2] nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 2 4 0 6 7 0 0 0 3 0 0 5] [
nil nil [nil 67 1073741312 1 5] [nil 43 1073741385 2 5] [nil 51 1073741312 3 5]
[nil 30 1073741312 6 2] [nil 38 1073741385 4 2] [nil 22 1073741385 5 2] nil nil
nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 7 2])
(f4_reduction: after sorting [nil [nil [nil 1 2 3 6]] [nil [nil 1 2 3 4 5]] [nil
2 3 4 6 7 5] [nil] 2 0 2 6 1 1 1 5 [nil 4 nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil] [nil 7 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2 3 6]] [nil [nil 1 2 3
4 5]] [nil 2 3 4 6 7 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 2 0 2 6 1 1 1 5 [nil
4 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] [nil 7 nil nil 1
nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2 3 6] nil nil [nil 4 5 6] nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2 3 6]] [nil [nil 4 5 6]] [
nil 2 3 4 6 7 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 1 1 1 6 1 1 1 5 [nil 4 nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil] [nil 7 nil nil 1 nil
nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2 3 6]] [nil [nil 4 5 6]] [nil 2
3 4 6 7 5] [nil [nil (1 . 1) (1 . 1) (1 . 1)]] 1 1 1 6 1 1 1 5 [nil 4 nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil] [nil 7 nil nil 1 nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil
nil nil nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1
. 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil
(1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (
1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil
nil nil nil nil nil nil nil] 16 7 8 [nil 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1
2 3 4 5 6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741385
1073741385 1073741312 1073741531 1073741385 1073741312 nil nil nil nil nil nil
nil nil nil] 7])
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
insert_in_hash_table..
(BEFORE 0 [nil [nil 1 8 11 2] [nil 2 8 2 3] [nil 3 8 3 4] [nil 4 8 4 5] [nil 5 8
5 6] [nil 6 8 8 5] [nil 7 8 9 6] nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil])
(f4: after update:  [nil [nil [nil 1 8 4 2] [nil 2 8 2 3] [nil 3 8 3 4] [nil 4 8
4 5] [nil 6 8 8 5] [nil 5 8 5 6] [nil 7 8 9 6] nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil] 1])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil nil nil
nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1
) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil nil nil
nil nil nil nil nil] 16 8 8 [nil 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0] [nil 3 4 5 7 8
6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741312 1073741531
1073741312 1073741385 1073741385 1073741312 nil nil nil nil nil nil nil nil nil]
5])
I am here!!!
I am here!!!
(f4: iteration:  7)
(f4: available pairs: 1)
(f4_select_normal: Selected 1 pairs)
(sort_pairset_by_lcm: [nil [nil 1 8 4 2] [nil 2 8 2 3] [nil 3 8 3 4] [nil 4 8 4
5] [nil 6 8 8 5] [nil 5 8 5 6] [nil 7 8 9 6] nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil] , npairs: 1)
(sort_pairset_by_lcm: before (([nil 1 8 4 2] [nil 1 1 0 2])))
(sort_pairset_by_lcm: after (([nil 1 8 4 2] [nil 1 1 0 2])))
(f4_select_normal: matrix [nil [nil nil nil] [nil nil nil] [nil] [nil] 2 0 0 0 0
0 0 0 [nil nil nil] [nil nil nil]])
(f4_select_normal: symbol_ht [nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil
] [nil 0 0 0 0 0 0 0 0] [nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3
4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [
nil 1 2 3] 3 10 8 1 2])
(f4_select_normal: adding  1 times 2 S-polys)
(sort_generators_by_position: before sort:  (1 8) 2)
(sort_generators_by_position: after sort:  (1 8) 2)
(f4_select_normal: after sorting S-polys [nil 1 8] 2)
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 0 0 0] nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 0] [nil
nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3
1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 1 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  0 ; h =  38)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  0 ; h =  22)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  0 ; h =  30)
(f4_select_normal: matrix after whatever [nil [nil [nil 2 3 4] nil] [nil nil nil
] [nil] [nil] 2 0 1 1 1 0 0 0 [nil 1 nil] [nil nil nil]])
(f4_select_normal: symbol_ht after whatever [nil [nil [nil 0 1 1 2] [nil 1 1 0 2
] [nil 1 0 1 2] [nil 0 1 1 2] nil nil nil nil] [nil 3 4 0 0 0 0 0 2] [nil nil [
nil 38 1073741385 2 2] [nil 22 1073741385 0 2] [nil 30 1073741312 0 2] nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 8 4 2])
I am here!!!
(INSERTING [nil 4 5 6] MULTIPLIED BY [nil 0 0 0 0] TO SYM HASHTABLE:)
(hash(etmp) =  0)
[nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 4] [nil
nil [nil 38 1073741385 2 2] [nil 22 1073741385 0 2] [nil 30 1073741312 0 2] nil
nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil
1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16
4 2]
(MONOMIAL [nil 1 1 0 2] WITH HASH h = htmp + hash(e))
(hash(e) =  38)
(htmp =  0 ; h =  38)
(MONOMIAL [nil 1 0 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  22)
(htmp =  0 ; h =  22)
(MONOMIAL [nil 0 1 1 2] WITH HASH h = htmp + hash(e))
(hash(e) =  30)
(htmp =  0 ; h =  30)
(f4: after select:  [nil [nil [nil 1 8 4 2] [nil 2 8 2 3] [nil 3 8 3 4] [nil 4 8
4 5] [nil 6 8 8 5] [nil 5 8 5 6] [nil 7 8 9 6] nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil] 0])
(f4: matrix: [nil [nil [nil 2 3 4] nil] [nil [nil 2 3 4]] [nil] [nil] 2 0 2 1 1
1 0 0 [nil 1 nil] [nil 8 nil]])
(f4: symbol_ht: [nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2
] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0 0 0 2 3 0 0 0
0 0 0 4] [nil nil [nil 38 1073741385 2 2] [nil 22 1073741385 0 2] [nil 30
1073741312 0 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2]
3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
[nil 1 2 3] 3 10 16 4 2])
(f4_symbolic_preprocessing: ZEROOOOOOOO: ht [nil [nil [nil 0 0 0 0] [nil 1 1 1 3
] [nil 0 0 0 0] [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] [nil 1 0 2 3] [nil 0 1
2 3] [nil 1 1 2 4] [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil 0 1 0 1] [nil
1 2 2 5] [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [
nil 1 1 0 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 3 0 0 17 11
8 4 0 0 0 0 14 12 2 18 0 0 0 0 15 9 19 5 13 0 0 0 16 10 7 6] [nil nil [nil 45
1073741385 0 3] [nil 0 1073741312 0 0] [nil 38 1073741385 0 2] [nil 22
1073741385 0 2] [nil 30 1073741312 0 2] [nil 29 1073741385 2 3] [nil 37
1073741312 3 3] [nil 52 1073741385 0 4] [nil 60 1073741312 2 4] [nil 36
1073741385 3 4] [nil 44 1073741312 4 4] [nil 23 1073741312 5 1] [nil 75
1073741385 0 5] [nil 51 1073741531 2 5] [nil 59 1073741385 3 5] [nil 67
1073741312 4 5] [nil 43 1073741385 3 5] [nil 51 1073741312 4 5] nil nil nil nil
nil nil nil nil nil nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1
2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 32 19 2])
(f4_symbolic_preprocessing: ONE: symbol_ht [nil [nil [nil 0 1 1 2] [nil 1 1 0 2]
[nil 1 0 1 2] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 4] [nil nil [nil 38 1073741385 2 2] [nil 22
1073741385 0 2] [nil 30 1073741312 0 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(f4_symbolic_preprocessing: TWO: symbol_ht [nil [nil [nil 0 1 1 2] [nil 1 1 0 2]
[nil 1 0 1 2] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 4] [nil nil [nil 38 1073741385 2 2] [nil 22
1073741385 1 2] [nil 30 1073741312 1 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(f4: after symbolic matrix:  [nil [nil [nil 2 3 4]] [nil [nil 2 3 4]] [nil] [nil
] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 8 nil]])
(f4: after symbolic symbol_ht:  [nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil 1 0 1
2] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0 0 0 0
0 0 2 3 0 0 0 0 0 0 4] [nil nil [nil 38 1073741385 2 2] [nil 22 1073741385 1 2]
[nil 30 1073741312 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 13
21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(convert_hashes_to_columns: matrix [nil [nil [nil 2 3 4]] [nil [nil 2 3 4]] [nil
] [nil] 2 0 2 3 1 1 0 0 [nil 1 nil nil nil nil nil nil nil] [nil 8 nil]])
(convert_hashes_to_columns: symbol_ht [nil [nil [nil 0 1 1 2] [nil 1 1 0 2] [nil
1 0 1 2] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [nil 0 0
0 0 0 0 0 2 3 0 0 0 0 0 0 4] [nil nil [nil 38 1073741385 2 2] [nil 22 1073741385
1 2] [nil 30 1073741312 1 2] nil nil nil nil nil nil nil nil nil nil nil nil] [
nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(convert_hashes_to_columns: sorted by hash [nil 2 3 4])
(f4_reduction: after convert hashes to cols: matrix [nil [nil [nil 1 2 3]] [nil
[nil 1 2 3]] [nil 2 3 4] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil
nil] [nil 8 nil]])
(f4_reduction: after convert hashes to cols: symbol_ht [nil [nil [nil 0 1 1 2] [
nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2] nil nil nil nil nil nil nil nil nil nil
nil nil] [nil 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 4] [nil nil [nil 38 1073741385 1 2]
[nil 22 1073741385 2 2] [nil 30 1073741312 3 2] nil nil nil nil nil nil nil nil
nil nil nil nil] [nil 13 21 5 2] 3 4 revgradlex [nil 1 2 3 1 2 3 1 2 3 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] [nil 1 2 3] 3 10 16 4 2])
(f4_reduction: after sorting [nil [nil [nil 1 2 3]] [nil [nil 1 2 3]] [nil 2 3 4
] [nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 8 nil]])
I am here!!!
(exact_sparse_rref: lower part reduced: [nil [nil [nil 1 2 3]] [nil [nil 1 2 3]]
[nil 2 3 4] [nil nil] 2 0 2 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 8
nil nil]])
(exact_sparse_rref: pivs: [nil [nil 1 2 3] nil nil])
(f4_reduction: after linear algebra [nil [nil [nil 1 2 3]] [nil] [nil 2 3 4] [
nil nil] 0 0 0 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 8 nil nil]])
(f4: after reduction, matrix:  [nil [nil [nil 1 2 3]] [nil] [nil 2 3 4] [nil nil
] 0 0 0 3 1 1 1 2 [nil 1 nil nil nil nil nil nil nil] [nil 8 nil nil]])
(f4: after reduction, basis:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil
nil nil nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1
. 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil
(1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (
1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil
nil nil nil nil nil nil nil] 16 8 8 [nil 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0] [nil 3
4 5 7 8 6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741312
1073741531 1073741312 1073741385 1073741385 1073741312 nil nil nil nil nil nil
nil nil nil] 5])
(f4: after update:  [nil [nil [nil 1 8 4 2] [nil 2 8 2 3] [nil 3 8 3 4] [nil 4 8
4 5] [nil 6 8 8 5] [nil 5 8 5 6] [nil 7 8 9 6] nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil] 0])
(f4: after update:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12 13
] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil nil nil
nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1
) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil nil nil
nil nil nil nil nil] 16 8 8 [nil 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0] [nil 3 4 5 7 8
6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741312 1073741531
1073741312 1073741385 1073741385 1073741312 nil nil nil nil nil nil nil nil nil]
5])
I am here!!!
I am here!!!
(f4: after main loop:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil 10 11 12
13] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil nil nil
nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1)] [
nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1
) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1)
(-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil nil nil
nil nil nil nil nil] 16 8 8 [nil 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0] [nil 3 4 5 7 8
6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741312 1073741531
1073741312 1073741385 1073741385 1073741312 nil nil nil nil nil nil nil nil nil]
5])
(f4: after filter redundant:  [nil [nil [nil 4 5 6] [nil 2 3] [nil 7 8 3] [nil
10 11 12 13] [nil 15 16 17 4] [nil 16 17 4 5] [nil 17 18 19 4 5] [nil 4 5 6] nil
nil nil nil nil nil nil nil] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1
. 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil
(1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (-1 . 1) (-1 . 1)] [nil (
1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] nil
nil nil nil nil nil nil nil] 16 8 8 [nil 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0] [nil 3
4 5 7 8 6 7 nil nil nil nil nil nil nil nil nil] [nil 1073741385 1073741312
1073741531 1073741312 1073741385 1073741385 1073741312 nil nil nil nil nil nil
nil nil nil] 5])
(In standardize, just before sort [nil [nil [nil 7 8 3] [nil 10 11 12 13] [nil
15 16 17 4] [nil 17 18 19 4 5] [nil 4 5 6]] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [
nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)] [
nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)]]
5 5 5 [nil 0 0 0 0 0] [nil 1 2 3 4 5] [nil 1073741385 1073741312 1073741531
1073741312 1073741385] 5])
(f4: after standardize:  [nil [nil [nil 4 5 6] [nil 7 8 3] [nil 10 11 12 13] [
nil 17 18 19 4 5] [nil 15 16 17 4]] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 .
1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1
) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)]] 5 5 5 [nil
0 0 0 0 0] [nil 1 2 3 4 5] [nil 1073741385 1073741385 1073741312 1073741312
1073741531] 5])
(After f4:  [nil [nil [nil 4 5 6] [nil 7 8 3] [nil 10 11 12 13] [nil 17 18 19 4
5] [nil 15 16 17 4]] [nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1) (1
. 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (-1
. 1) (-1 . 1)] [nil (1 . 1) (2 . 1) (1 . 1) (-1 . 1)]] 5 5 5 [nil 0 0 0 0 0] [
nil 1 2 3 4 5] [nil 1073741385 1073741385 1073741312 1073741312 1073741531] 5])
(exps :  [nil [nil [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2]] [nil [nil 1 0 2 3]
[nil 0 1 2 3] [nil 0 0 0 0]] [nil [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3 4] [nil
0 1 0 1]] [nil [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [nil 1 1 0 2] [nil 1 0
1 2]] [nil [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 1 1 0 2]]])
(AM: groebner: [nil [nil [nil 1 1 0 2] [nil 1 0 1 2] [nil 0 1 1 2]] [nil [nil 1
0 2 3] [nil 0 1 2 3] [nil 0 0 0 0]] [nil [nil 0 2 2 4] [nil 1 0 3 4] [nil 0 1 3
4] [nil 0 1 0 1]] [nil [nil 0 2 3 5] [nil 1 0 4 5] [nil 0 1 4 5] [nil 1 1 0 2] [
nil 1 0 1 2]] [nil [nil 2 0 3 5] [nil 1 1 3 5] [nil 0 2 3 5] [nil 1 1 0 2]]] [
nil [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (1 . 1) (1 . 1)] [nil (1 . 1) (-1
. 1) (-1 . 1) (1 . 1)] [nil (1 . 1) (-1 . 1) (-1 . 1) (-1 . 1) (-1 . 1)] [nil (1
. 1) (2 . 1) (1 . 1) (-1 . 1)]])
convert_to_output..
(poly 1)
(((2 1 1 0) (2 1 0 1) (2 0 1 1)) ((1 . 1) (1 . 1) (1 . 1)))
(poly 2)
(((3 1 0 2) (3 0 1 2) (0 0 0 0)) ((1 . 1) (1 . 1) (1 . 1)))
(poly 3)
(((4 0 2 2) (4 1 0 3) (4 0 1 3) (1 0 1 0)) ((1 . 1) (-1 . 1) (-1 . 1) (1 . 1)))
(poly 4)
(((5 0 2 3) (5 1 0 4) (5 0 1 4) (2 1 1 0) (2 1 0 1)) ((1 . 1) (-1 . 1) (-1 . 1)
(-1 . 1) (-1 . 1)))
(poly 5)
(((5 2 0 3) (5 1 1 3) (5 0 2 3) (2 1 1 0)) ((1 . 1) (2 . 1) (1 . 1) (-1 . 1)))

  2  3          3    2  3
{x *z  + 2*x*y*z  + y *z  - x*y,

  2  3      4      4
 y *z  - x*z  - y*z  - x*y - x*z,

  2  2      3      3
 y *z  - x*z  - y*z  + y,

    2      2
 x*z  + y*z  + 1,

 x*y + x*z + y*z}







*** End-of-file read 
